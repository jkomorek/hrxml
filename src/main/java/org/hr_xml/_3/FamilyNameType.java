//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.openapplications.oagis._9.TextType;


/**
 * 
 * This contains the name or names that generally would be inherited or indicative of a person's family. 
 * In Western contexts, this is what is commonly referred to as a "last name." 
 * 
 * If a person has multiple family names, the order in which the names appear is deemed significant.
 * Generally, that order should correspond to the order in which the names would appear in a
 * typical formatted representation. The order may be specifically identified by the sequence. 
 * 
 * A "primary" family name may be indicated using the attribute supplied for this purpose.
 * Where multiple family names are presented, only a single name may be designated 
 * as primary = "true" 
 * 	
 * Note that the attribute "prefix" may optionally contain a part of the person’s name that precedes the family name. 
 * For example:  Van den, Von, Al, de, etc. 
 * Some implementers may choose not to represent a prefix separately from a Family Name. However,
 * it may be desirable to do so for a number of reasons: 
 *  1. name sorting.  For example, to support sorting on first letter of prefix and then by first letter of the family name.
 *  2. formatting. For example, depending on the cultural context in which the name is presented, the type of 
 * delimiter (e.g., a space or a hyphen) between the prefix and the family name (or whether a delimiter appears at) all 
 * may depend on the "alphabet" and/or cultural context in which the name is presented.
 * 
 * <p>Java class for FamilyNameType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FamilyNameType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.openapplications.org/oagis/9>TextType">
 *       &lt;attribute name="primaryIndicator" type="{http://www.openapplications.org/oagis/9}IndicatorType" />
 *       &lt;attribute name="sequence" type="{http://www.openapplications.org/oagis/9}PositiveIntegerNumericType" />
 *       &lt;attribute name="prefix" type="{http://www.openapplications.org/oagis/9}StringType" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FamilyNameType")
public class FamilyNameType
    extends TextType
{

    @XmlAttribute(name = "primaryIndicator")
    protected Boolean primaryIndicator;
    @XmlAttribute(name = "sequence")
    protected BigInteger sequence;
    @XmlAttribute(name = "prefix")
    protected String prefix;

    /**
     * Gets the value of the primaryIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPrimaryIndicator() {
        return primaryIndicator;
    }

    /**
     * Sets the value of the primaryIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPrimaryIndicator(Boolean value) {
        this.primaryIndicator = value;
    }

    /**
     * Gets the value of the sequence property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSequence() {
        return sequence;
    }

    /**
     * Sets the value of the sequence property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSequence(BigInteger value) {
        this.sequence = value;
    }

    /**
     * Gets the value of the prefix property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrefix() {
        return prefix;
    }

    /**
     * Sets the value of the prefix property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrefix(String value) {
        this.prefix = value;
    }

}
