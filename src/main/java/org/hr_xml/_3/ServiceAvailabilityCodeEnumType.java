//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ServiceAvailabilityCodeEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ServiceAvailabilityCodeEnumType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Available"/>
 *     &lt;enumeration value="Unavailable"/>
 *     &lt;enumeration value="TemporarilyUnavailable"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ServiceAvailabilityCodeEnumType")
@XmlEnum
public enum ServiceAvailabilityCodeEnumType {


    /**
     * Indicates that a service is currently available to be ordered, purchased, utilitized, etc.
     * 
     */
    @XmlEnumValue("Available")
    AVAILABLE("Available"),

    /**
     * Indicates that a service is unavailable.
     * 
     */
    @XmlEnumValue("Unavailable")
    UNAVAILABLE("Unavailable"),

    /**
     * Indicates that the service is temporarily unavailable.
     * 
     */
    @XmlEnumValue("TemporarilyUnavailable")
    TEMPORARILY_UNAVAILABLE("TemporarilyUnavailable");
    private final String value;

    ServiceAvailabilityCodeEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ServiceAvailabilityCodeEnumType fromValue(String v) {
        for (ServiceAvailabilityCodeEnumType c: ServiceAvailabilityCodeEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
