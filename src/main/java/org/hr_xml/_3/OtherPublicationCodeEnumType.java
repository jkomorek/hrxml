//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for OtherPublicationCodeEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="OtherPublicationCodeEnumType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Thesis"/>
 *     &lt;enumeration value="Whitepaper"/>
 *     &lt;enumeration value="Report"/>
 *     &lt;enumeration value="TechnicalDocumentation"/>
 *     &lt;enumeration value="Study"/>
 *     &lt;enumeration value="Manual"/>
 *     &lt;enumeration value="ResearchPaper"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "OtherPublicationCodeEnumType")
@XmlEnum
public enum OtherPublicationCodeEnumType {

    @XmlEnumValue("Thesis")
    THESIS("Thesis"),
    @XmlEnumValue("Whitepaper")
    WHITEPAPER("Whitepaper"),
    @XmlEnumValue("Report")
    REPORT("Report"),
    @XmlEnumValue("TechnicalDocumentation")
    TECHNICAL_DOCUMENTATION("TechnicalDocumentation"),
    @XmlEnumValue("Study")
    STUDY("Study"),
    @XmlEnumValue("Manual")
    MANUAL("Manual"),
    @XmlEnumValue("ResearchPaper")
    RESEARCH_PAPER("ResearchPaper");
    private final String value;

    OtherPublicationCodeEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OtherPublicationCodeEnumType fromValue(String v) {
        for (OtherPublicationCodeEnumType c: OtherPublicationCodeEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
