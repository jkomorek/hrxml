//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DaysLateCodeEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DaysLateCodeEnumType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Late30Days"/>
 *     &lt;enumeration value="Late60Days"/>
 *     &lt;enumeration value="Late90Days"/>
 *     &lt;enumeration value="LateOver120Days"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DaysLateCodeEnumType")
@XmlEnum
public enum DaysLateCodeEnumType {


    /**
     * Account is between 30 and 59 days past due.
     * 
     */
    @XmlEnumValue("Late30Days")
    LATE_30_DAYS("Late30Days"),

    /**
     * Account is between 60 and 89 days past due.
     * 
     */
    @XmlEnumValue("Late60Days")
    LATE_60_DAYS("Late60Days"),

    /**
     * Account is betwen 90 and 119 days past due.
     * 
     */
    @XmlEnumValue("Late90Days")
    LATE_90_DAYS("Late90Days"),

    /**
     * Account is 120 days or more past due.
     * 
     */
    @XmlEnumValue("LateOver120Days")
    LATE_OVER_120_DAYS("LateOver120Days");
    private final String value;

    DaysLateCodeEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DaysLateCodeEnumType fromValue(String v) {
        for (DaysLateCodeEnumType c: DaysLateCodeEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
