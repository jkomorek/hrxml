//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.openapplications.oagis._9.AmountType;
import org.openapplications.oagis._9.QuantityType;


/**
 * A collection of details concerning how the exercise of the options should be carried out.
 * 
 * <p>Java class for ExerciseInstructionsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ExerciseInstructionsType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.hr-xml.org/3}CoverOptionsIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}CoverTaxesIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}CoverFeesIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}UseSharesForTaxesIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}UseSharesFirstIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}SharesSwappedQuantity" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}TaxRelevantPrice" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}ShareSaleInstructions" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}UserArea" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ExerciseInstructionsType", propOrder = {
    "coverOptionsIndicator",
    "coverTaxesIndicator",
    "coverFeesIndicator",
    "useSharesForTaxesIndicator",
    "useSharesFirstIndicator",
    "sharesSwappedQuantity",
    "taxRelevantPrice",
    "shareSaleInstructions",
    "userArea"
})
public class ExerciseInstructionsType {

    @XmlElement(name = "CoverOptionsIndicator")
    protected Boolean coverOptionsIndicator;
    @XmlElement(name = "CoverTaxesIndicator")
    protected Boolean coverTaxesIndicator;
    @XmlElement(name = "CoverFeesIndicator")
    protected Boolean coverFeesIndicator;
    @XmlElement(name = "UseSharesForTaxesIndicator")
    protected Boolean useSharesForTaxesIndicator;
    @XmlElement(name = "UseSharesFirstIndicator")
    protected Boolean useSharesFirstIndicator;
    @XmlElement(name = "SharesSwappedQuantity")
    protected QuantityType sharesSwappedQuantity;
    @XmlElement(name = "TaxRelevantPrice")
    protected AmountType taxRelevantPrice;
    @XmlElement(name = "ShareSaleInstructions")
    protected ShareSaleInstructionsType shareSaleInstructions;
    @XmlElement(name = "UserArea")
    protected UserAreaType userArea;

    /**
     * Flag to specify if shares were sold to cover the cost of the options for the exercise transaction. 
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isCoverOptionsIndicator() {
        return coverOptionsIndicator;
    }

    /**
     * Sets the value of the coverOptionsIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCoverOptionsIndicator(Boolean value) {
        this.coverOptionsIndicator = value;
    }

    /**
     * Flag to specify if shares were sold to cover the tax liability of the exercise transaction.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isCoverTaxesIndicator() {
        return coverTaxesIndicator;
    }

    /**
     * Sets the value of the coverTaxesIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCoverTaxesIndicator(Boolean value) {
        this.coverTaxesIndicator = value;
    }

    /**
     * Flag to specify if shares were sold to cover the fees associated with the exercise transaction.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isCoverFeesIndicator() {
        return coverFeesIndicator;
    }

    /**
     * Sets the value of the coverFeesIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCoverFeesIndicator(Boolean value) {
        this.coverFeesIndicator = value;
    }

    /**
     * Flag to specify if shares were used to cover the tax liability of the exercise transaction. 
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUseSharesForTaxesIndicator() {
        return useSharesForTaxesIndicator;
    }

    /**
     * Sets the value of the useSharesForTaxesIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseSharesForTaxesIndicator(Boolean value) {
        this.useSharesForTaxesIndicator = value;
    }

    /**
     * 
     * Flag to specify that shares tendered were used before any shares are sold to cover the cost of the options for the exercise transaction. 
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUseSharesFirstIndicator() {
        return useSharesFirstIndicator;
    }

    /**
     * Sets the value of the useSharesFirstIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseSharesFirstIndicator(Boolean value) {
        this.useSharesFirstIndicator = value;
    }

    /**
     * The number of shares exchanged to cover the cost of options.
     * 
     * @return
     *     possible object is
     *     {@link QuantityType }
     *     
     */
    public QuantityType getSharesSwappedQuantity() {
        return sharesSwappedQuantity;
    }

    /**
     * Sets the value of the sharesSwappedQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link QuantityType }
     *     
     */
    public void setSharesSwappedQuantity(QuantityType value) {
        this.sharesSwappedQuantity = value;
    }

    /**
     * The price used in the calculation of taxable compensation for a taxable transaction (exercise/disposition).
     * 
     * @return
     *     possible object is
     *     {@link AmountType }
     *     
     */
    public AmountType getTaxRelevantPrice() {
        return taxRelevantPrice;
    }

    /**
     * Sets the value of the taxRelevantPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link AmountType }
     *     
     */
    public void setTaxRelevantPrice(AmountType value) {
        this.taxRelevantPrice = value;
    }

    /**
     * Gets the value of the shareSaleInstructions property.
     * 
     * @return
     *     possible object is
     *     {@link ShareSaleInstructionsType }
     *     
     */
    public ShareSaleInstructionsType getShareSaleInstructions() {
        return shareSaleInstructions;
    }

    /**
     * Sets the value of the shareSaleInstructions property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShareSaleInstructionsType }
     *     
     */
    public void setShareSaleInstructions(ShareSaleInstructionsType value) {
        this.shareSaleInstructions = value;
    }

    /**
     * Gets the value of the userArea property.
     * 
     * @return
     *     possible object is
     *     {@link UserAreaType }
     *     
     */
    public UserAreaType getUserArea() {
        return userArea;
    }

    /**
     * Sets the value of the userArea property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserAreaType }
     *     
     */
    public void setUserArea(UserAreaType value) {
        this.userArea = value;
    }

}
