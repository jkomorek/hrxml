//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AssignmentEntryReasonEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AssignmentEntryReasonEnumType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Acquisition"/>
 *     &lt;enumeration value="Demotion"/>
 *     &lt;enumeration value="Hire"/>
 *     &lt;enumeration value="Lateral"/>
 *     &lt;enumeration value="Promotion"/>
 *     &lt;enumeration value="Transfer"/>
 *     &lt;enumeration value="Re-hire"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AssignmentEntryReasonEnumType")
@XmlEnum
public enum AssignmentEntryReasonEnumType {

    @XmlEnumValue("Acquisition")
    ACQUISITION("Acquisition"),
    @XmlEnumValue("Demotion")
    DEMOTION("Demotion"),
    @XmlEnumValue("Hire")
    HIRE("Hire"),
    @XmlEnumValue("Lateral")
    LATERAL("Lateral"),
    @XmlEnumValue("Promotion")
    PROMOTION("Promotion"),
    @XmlEnumValue("Transfer")
    TRANSFER("Transfer"),
    @XmlEnumValue("Re-hire")
    RE_HIRE("Re-hire");
    private final String value;

    AssignmentEntryReasonEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AssignmentEntryReasonEnumType fromValue(String v) {
        for (AssignmentEntryReasonEnumType c: AssignmentEntryReasonEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
