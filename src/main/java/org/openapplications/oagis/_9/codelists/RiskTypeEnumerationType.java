//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.openapplications.oagis._9.codelists;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RiskTypeEnumerationType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="RiskTypeEnumerationType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Compliance with applicable laws and regulations"/>
 *     &lt;enumeration value="Effectiveness and efficiency of operations"/>
 *     &lt;enumeration value="Reliability of Financial Statements"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "RiskTypeEnumerationType", namespace = "http://www.openapplications.org/oagis/9/codelists")
@XmlEnum
public enum RiskTypeEnumerationType {

    @XmlEnumValue("Compliance with applicable laws and regulations")
    COMPLIANCE_WITH_APPLICABLE_LAWS_AND_REGULATIONS("Compliance with applicable laws and regulations"),
    @XmlEnumValue("Effectiveness and efficiency of operations")
    EFFECTIVENESS_AND_EFFICIENCY_OF_OPERATIONS("Effectiveness and efficiency of operations"),
    @XmlEnumValue("Reliability of Financial Statements")
    RELIABILITY_OF_FINANCIAL_STATEMENTS("Reliability of Financial Statements");
    private final String value;

    RiskTypeEnumerationType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RiskTypeEnumerationType fromValue(String v) {
        for (RiskTypeEnumerationType c: RiskTypeEnumerationType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
