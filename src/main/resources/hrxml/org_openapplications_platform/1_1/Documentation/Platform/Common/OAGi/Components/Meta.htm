<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>OAGi Platform 1_1 OAGi Common Components -- Meta Documentation</title>
<meta content="text/xml; charset=iso-8859-1" http-equiv="Content-Type" />
<style type="text/css">
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* More-configurable styles */

/******** General ********/

/* Document body */
body {
   color: Black;
   background-color: White;
   font-family: Arial, sans-serif;
   font-size: 10pt;
}
/* Horizontal rules */
hr {
   color: black;
}
/* Document title */
h1 {
   font-size: 18pt;
   letter-spacing: 2px;
   border-bottom: 1px #ccc solid;
   padding-top: 5px;
   padding-bottom: 5px;
}
/* Main section headers */
h2 {
   font-size: 14pt;
   letter-spacing: 1px;
}
/* Sub-section headers */
h3, h3 a, h3 span {
   font-size: 12pt;
   font-weight: bold;
   color: black;
}
/* Table displaying the properties of the schema components or the
   schema document itself */
table.properties th, table.properties th a {
   color: black;
   background-color: #F99; /* Pink */
}
table.properties td {
   background-color: #eee; /* Gray */
}


/******** Table of Contents Section ********/

/* Controls for switching between printing and viewing modes */
div#printerControls {
   color: #963; /* Orange-brown */
}
/* Controls that can collapse or expand all XML Instance
   Representation and Schema Component Representation boxes */
div#globalControls {
   border: 2px solid #999;
}


/******** Schema Document Properties Section ********/

/* Table displaying the namespaces declared in the schema */
table.namespaces th {
   background-color: #ccc;
}
table.namespaces td {
   background-color: #eee;
}
/* Target namespace of the schema */
span.targetNS {
   color: #06C;
   font-weight: bold;
}


/******** Schema Components' Sections ********/

/* Name of schema component */
.name {
   color: #F93; /* Orange */
}

/* Hierarchy table */
table.hierarchy {
   border: 2px solid #999; /* Gray */
}

/* XML Instance Representation table */
div.sample div.contents {
   border: 2px dashed black;
}

/* Schema Component Representation table */
div.schemaComponent div.contents {
   border: 2px black solid;
}


/******** Glossary Section ********/

/* Glossary Terms */
.glossaryTerm {
   color: #036; /* Blue */
}


/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* Printer-version styles */

@media print {

/* Ensures that controls are hidden when printing */
div#printerControls {
   visibility: hidden;
}
div#globalControls {
   visibility: hidden;
}
#legend {
   display: none;
}
#legendTOC {
   display: none;
}
#glossary {
   display: none;
}
#glossaryTOC {
   display: none;
}

}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* Base styles */

/******** General ********/

/* Unordered lists */
ul {
   margin-left: 1.5em;
   margin-bottom: 0em;
}
/* Tables */
table {
   margin-top: 10px;
   margin-bottom: 10px;
   margin-left: 2px;
   margin-right: 2px;
}
table th, table td {
   font-size: 10pt;
   vertical-align: top;
   padding-top: 3px;
   padding-bottom: 3px;
   padding-left: 10px;
   padding-right: 10px;
}
table th {
   font-weight: bold;
   text-align: left;
}
/* Table displaying the properties of the schema components or the
   schema document itself */
table.properties {
   width: 90%;
}
table.properties th {
   width: 30%;
}
/* Boxes that can make its content appear and disappear*/
div.box {
   margin: 1em;
}
   /* Box caption */
div.box span.caption {
   font-weight: bold;
}
   /* Button to open and close the box */
div.box input.control {
   width: 1.4em;
   height: 1.4em;
   text-align: center;
   vertical-align: middle;
   font-size: 11pt;
}
   /* Box contents */
div.box div.contents {
   margin-top: 3px;
}


/******** Table of Contents Section ********/

/* Controls for switching between printing and viewing modes */
div#printerControls {
   white-space: nowrap;
   font-weight: bold;
   padding: 5px;
   margin: 5px;
}
/* Controls that can collapse or expand all XML Instance
   Representation and Schema Component Representation boxes */
div#globalControls {
   padding: 10px;
   margin: 5px;
}


/******** Schema Document Properties Section ********/

/* Table displaying the namespaces declared in the schema */
table.namespaces th {
}
table.namespaces td {
}
/* Target namespace of the schema */
span.targetNS {
}


/******** Schema Components' Sections ********/

/* Name of schema component */
.name {
}

/* Hierarchy table */
table.hierarchy {
   width: 90%;
}
table.hierarchy th {
   font-weight: normal;
   font-style: italic;
   width: 20%;
}
table.hierarchy th, table.hierarchy td {
   padding: 5px;
}

/* XML Instance Representation table */
div.sample {
   width: 90%;
}
div.sample div.contents {
   padding: 5px;
   font-family: Courier New, sans-serif;
   font-size: 10pt;
}
   /* Normal elements and attributes */
div.sample div.contents, div.sample div.contents a {
   color: black;
}
   /* Group Headers */
div.sample div.contents .group, div.sample div.contents .group a {
   color: #999; /* Light gray */
}
   /* Type Information */
div.sample div.contents .type, div.sample div.contents .type a {
   color: #999; /* Light gray */
}
   /* Occurrence Information */
div.sample div.contents .occurs, div.sample div.contents .occurs a {
   color: #999; /* Light gray */
}
   /* Fixed values */
div.sample div.contents .fixed {
   color: #063; /* Green */
   font-weight: bold;
}
   /* Simple type constraints */
div.sample div.contents .constraint, div.sample div.contents .constraint a {
   color: #999; /* Light gray */
}
   /* Elements and attributes inherited from base type */
div.sample div.contents .inherited, div.sample div.contents .inherited a {
   color: #666; /* Dark gray */
}
   /* Elements and attributes added to or changed from base type */
div.sample div.contents .newFields {
   font-weight: bold;
}
   /* Other type of information */
div.sample div.contents .other, div.sample div.contents .other a {
   color: #369; /* Blue */
   font-style: italic;
}
   /* Link to open up window displaying documentation */
div.sample div.contents a.documentation {
   text-decoration: none;
   padding-left: 3px;
   padding-right: 3px;
   padding-top: 0px;
   padding-bottom: 0px;
   font-weight: bold;
   font-size: 11pt;
   background-color: #FFD;
   color: #069;
}
   /* Invert colors when hovering over link to open up window 
      displaying documentation */
div.sample div.contents a.documentation:hover {
   color: #FFD;
   background-color: #069;
}

/* Schema Component Representation table */
div.schemaComponent {
   width: 90%;
}
div.schemaComponent div.contents {
   font-family: Courier New, sans-serif;
   font-size: 10pt;
   padding: 5px;
}
   /* Syntax characters */
div.schemaComponent div.contents {
   color: #00f; /* blue */
}
   /* Element and attribute tags */
div.schemaComponent div.contents .scTag {
   color: #933; /* maroon */
}
   /* Element and attribute content */
div.schemaComponent div.contents .scContent, div.schemaComponent div.contents .scContent a {
   color: black;
   font-weight: bold;
}
   /* Comments */
div.schemaComponent div.contents .comment {
   color: #999; /* Light gray */
}

/******** Legend Section ********/

div#legend table, div#legend div {
   margin-bottom: 3px;
}
div#legend div.hint {
   color: #999; /* Light gray */
   width: 90%;
   margin-left: 1em;
   margin-bottom: 2em;
}


/******** Glossary Section ********/

/* Glossary Terms */
.glossaryTerm {
   font-weight: bold;
}


/******** Footer ********/

.footer {
   font-size: 8pt;
}
</style>
<script type="text/javascript">
<!--
/* IDs of XML Instance Representation boxes */
var xiBoxes = new Array('type_BusinessObjectDocumentType_xibox', 'type_ApplicationAreaType_xibox', 'type_SenderType_xibox', 'type_ReceiverType_xibox', 'type_SignatureType_xibox', 'element_ApplicationArea_xibox', 'element_OriginalApplicationArea_xibox', 'element_Sender_xibox', 'element_Receiver_xibox', 'element_Signature_xibox', 'element_CreationDateTime_xibox', 'element_BODID_xibox', 'element_LogicalID_xibox', 'element_ComponentID_xibox', 'element_TaskID_xibox', 'element_ReferenceID_xibox', 'element_ConfirmationCode_xibox', 'type_SuccessMessageType_xibox', 'type_FailureMessageType_xibox', 'type_BODFailureMessageType_xibox', 'type_BODSuccessMessageType_xibox', 'type_MessageType_xibox', 'element_NounSuccessMessage_xibox', 'element_BODSuccessMessage_xibox', 'element_NounFailureMessage_xibox', 'element_BODFailureMessage_xibox', 'element_PartialBODFailureMessage_xibox', 'element_ErrorProcessMessage_xibox', 'element_WarningProcessMessage_xibox', 'type_ExpressionType_xibox', 'type_ActionExpressionType_xibox', 'type_ActionCriteriaType_xibox', 'type_ResponseActionCriteriaType_xibox', 'type_ResponseExpressionType_xibox', 'element_ActionExpression_xibox', 'element_ActionCriteria_xibox', 'element_Expression_xibox', 'element_ResponseCriteria_xibox', 'element_ResponseExpression_xibox', 'type_AcknowledgeType_xibox', 'type_CancelType_xibox', 'type_ChangeType_xibox', 'type_ConfirmType_xibox', 'type_GetType_xibox', 'type_LoadType_xibox', 'type_NotifyType_xibox', 'type_PostType_xibox', 'type_ProcessType_xibox', 'type_RespondType_xibox', 'type_ShowType_xibox', 'type_SyncType_xibox', 'type_UpdateType_xibox', 'element_Acknowledge_xibox', 'element_Cancel_xibox', 'element_Change_xibox', 'element_Confirm_xibox', 'element_Get_xibox', 'element_Load_xibox', 'element_Notify_xibox', 'element_Post_xibox', 'element_Process_xibox', 'element_Respond_xibox', 'element_Show_xibox', 'element_Sync_xibox', 'element_Update_xibox', 'type_GetListType_xibox', 'type_ListType_xibox', 'element_GetList_xibox', 'element_List_xibox', 'element_Create_xibox', 'element_Receive_xibox', 'element_Add_xibox', 'element_Issue_xibox', 'element_Allocate_xibox', 'type_VerbType_xibox', 'type_ActionVerbType_xibox', 'type_RequestVerbType_xibox', 'type_ResponseVerbType_xibox', 'type_ChangeStatusType_xibox', 'element_ChangeStatus_xibox', 'type_StatusBasisType_xibox', 'type_StateChangeType_xibox', 'element_StateChange_xibox', 'group_FreeFormTextGroup_xibox', 'element_ProcessMessage_xibox');
/* IDs of Schema Component Representation boxes */
var scBoxes = new Array('schema_scbox', 'type_BusinessObjectDocumentType_scbox', 'type_ApplicationAreaType_scbox', 'type_SenderType_scbox', 'type_ReceiverType_scbox', 'type_SignatureType_scbox', 'element_ApplicationArea_scbox', 'element_OriginalApplicationArea_scbox', 'element_Sender_scbox', 'element_Receiver_scbox', 'element_Signature_scbox', 'element_CreationDateTime_scbox', 'element_BODID_scbox', 'element_LogicalID_scbox', 'element_ComponentID_scbox', 'element_TaskID_scbox', 'element_ReferenceID_scbox', 'element_ConfirmationCode_scbox', 'type_SuccessMessageType_scbox', 'type_FailureMessageType_scbox', 'type_BODFailureMessageType_scbox', 'type_BODSuccessMessageType_scbox', 'type_MessageType_scbox', 'element_NounSuccessMessage_scbox', 'element_BODSuccessMessage_scbox', 'element_NounFailureMessage_scbox', 'element_BODFailureMessage_scbox', 'element_PartialBODFailureMessage_scbox', 'element_ErrorProcessMessage_scbox', 'element_WarningProcessMessage_scbox', 'type_ExpressionType_scbox', 'type_ActionExpressionType_scbox', 'type_ActionCriteriaType_scbox', 'type_ResponseActionCriteriaType_scbox', 'type_ResponseExpressionType_scbox', 'element_ActionExpression_scbox', 'element_ActionCriteria_scbox', 'element_Expression_scbox', 'element_ResponseCriteria_scbox', 'element_ResponseExpression_scbox', 'type_AcknowledgeType_scbox', 'type_CancelType_scbox', 'type_ChangeType_scbox', 'type_ConfirmType_scbox', 'type_GetType_scbox', 'type_LoadType_scbox', 'type_NotifyType_scbox', 'type_PostType_scbox', 'type_ProcessType_scbox', 'type_RespondType_scbox', 'type_ShowType_scbox', 'type_SyncType_scbox', 'type_UpdateType_scbox', 'element_Acknowledge_scbox', 'element_Cancel_scbox', 'element_Change_scbox', 'element_Confirm_scbox', 'element_Get_scbox', 'element_Load_scbox', 'element_Notify_scbox', 'element_Post_scbox', 'element_Process_scbox', 'element_Respond_scbox', 'element_Show_scbox', 'element_Sync_scbox', 'element_Update_scbox', 'type_GetListType_scbox', 'type_ListType_scbox', 'element_GetList_scbox', 'element_List_scbox', 'element_Create_scbox', 'element_Receive_scbox', 'element_Add_scbox', 'element_Issue_scbox', 'element_Allocate_scbox', 'type_VerbType_scbox', 'type_ActionVerbType_scbox', 'type_RequestVerbType_scbox', 'type_ResponseVerbType_scbox', 'type_ChangeStatusType_scbox', 'element_ChangeStatus_scbox', 'type_StatusBasisType_scbox', 'type_StateChangeType_scbox', 'element_StateChange_scbox', 'group_FreeFormTextGroup_scbox', 'element_ProcessMessage_scbox');

/**
 * Can get the ID of the button controlling
 * a collapseable box by concatenating
 * this string onto the ID of the box itself.
 */
var B_SFIX = "_button";

/**
 * Counter of documentation windows
 * Used to give each window a unique name
 */
var windowCount = 0;

/**
 * Returns an element in the current HTML document.
 * 
 * @param elementID Identifier of HTML element
 * @return               HTML element object
 */
function getElementObject(elementID) {
    var elemObj = null;
    if (document.getElementById) {
        elemObj = document.getElementById(elementID);
    }
    return elemObj;
}             

/**
 * Closes a collapseable box.
 * 
 * @param boxObj       Collapseable box
 * @param buttonObj Button controlling box
 */
function closeBox(boxObj, buttonObj) {
  if (boxObj == null || buttonObj == null) {
     // Box or button not found
  } else {
     // Change 'display' CSS property of box
     boxObj.style.display="none";

     // Change text of button 
     if (boxObj.style.display=="none") {
        buttonObj.value=" + ";
     }
  }
}

/**
 * Opens a collapseable box.
 * 
 * @param boxObj       Collapseable box
 * @param buttonObj Button controlling box
 */
function openBox(boxObj, buttonObj) {
  if (boxObj == null || buttonObj == null) {
     // Box or button not found
  } else {
     // Change 'display' CSS property of box
     boxObj.style.display="block";

     // Change text of button
     if (boxObj.style.display=="block") {
        buttonObj.value=" - ";
     }
  }
}

/**
 * Sets the state of a collapseable box.
 * 
 * @param boxID Identifier of box
 * @param open If true, box is "opened",
 *             Otherwise, box is "closed".
 */
function setState(boxID, open) {
  var boxObj = getElementObject(boxID);
  var buttonObj = getElementObject(boxID+B_SFIX);
  if (boxObj == null || buttonObj == null) {
     // Box or button not found
  } else if (open) {
     openBox(boxObj, buttonObj);
     // Make button visible
     buttonObj.style.display="inline";
  } else {
     closeBox(boxObj, buttonObj);
     // Make button visible
     buttonObj.style.display="inline";
  }
}

/**
 * Switches the state of a collapseable box, e.g.
 * if it's opened, it'll be closed, and vice versa.
 * 
 * @param boxID Identifier of box
 */
function switchState(boxID) {
  var boxObj = getElementObject(boxID);
  var buttonObj = getElementObject(boxID+B_SFIX);
  if (boxObj == null || buttonObj == null) {
     // Box or button not found
  } else if (boxObj.style.display=="none") {
     // Box is closed, so open it
     openBox(boxObj, buttonObj);
  } else if (boxObj.style.display=="block") {
     // Box is opened, so close it
     closeBox(boxObj, buttonObj);
  }
}

/**
 * Closes all boxes in a given list.
 * 
 * @param boxList Array of box IDs
 */
function collapseAll(boxList) {
  var idx;
  for (idx = 0; idx < boxList.length; idx++) {
     var boxObj = getElementObject(boxList[idx]);
     var buttonObj = getElementObject(boxList[idx]+B_SFIX);
     closeBox(boxObj, buttonObj);
  }
}

/**
 * Open all boxes in a given list.
 * 
 * @param boxList Array of box IDs
 */
function expandAll(boxList) {
  var idx;
  for (idx = 0; idx < boxList.length; idx++) {
     var boxObj = getElementObject(boxList[idx]);
     var buttonObj = getElementObject(boxList[idx]+B_SFIX);
     openBox(boxObj, buttonObj);
  }
}

/**
 * Makes all the control buttons of boxes appear.
 * 
 * @param boxList Array of box IDs
 */
function viewControlButtons(boxList) {
    var idx;
    for (idx = 0; idx < boxList.length; idx++) {
        buttonObj = getElementObject(boxList[idx]+B_SFIX);
        if (buttonObj != null) {
            buttonObj.style.display = "inline";
        }
    }
}

/**
 * Makes all the control buttons of boxes disappear.
 * 
 * @param boxList Array of box IDs
 */
function hideControlButtons(boxList) {
    var idx;
    for (idx = 0; idx < boxList.length; idx++) {
        buttonObj = getElementObject(boxList[idx]+B_SFIX);
        if (buttonObj != null) {
            buttonObj.style.display = "none";
        }
    }
}

/**
 * Sets the page for either printing mode
 * or viewing mode. In printing mode, the page
 * is made to be more readable when printing it out.
 * In viewing mode, the page is more browsable.
 *
 * @param isPrinterVersion If true, display in
 *                                 printing mode; otherwise, 
 *                                 in viewing mode
 */
function displayMode(isPrinterVersion) {
    var obj;
    if (isPrinterVersion) {
        // Hide global control buttons
        obj = getElementObject("globalControls");
        if (obj != null) {
            obj.style.visibility = "hidden";
        }
        // Hide Legend
        obj = getElementObject("legend");
        if (obj != null) {
            obj.style.display = "none";
        }
        obj = getElementObject("legendTOC");
        if (obj != null) {
            obj.style.display = "none";
        }
        // Hide Glossary
        obj = getElementObject("glossary");
        if (obj != null) {
            obj.style.display = "none";
        }
        obj = getElementObject("glossaryTOC");
        if (obj != null) {
            obj.style.display = "none";
        }

        // Expand all XML Instance Representation tables
        expandAll(xiBoxes);
        // Expand all Schema Component Representation tables
        expandAll(scBoxes);

        // Hide Control buttons
        hideControlButtons(xiBoxes);
        hideControlButtons(scBoxes);
    } else {
        // View global control buttons
        obj = getElementObject("globalControls");
        if (obj != null) {
            obj.style.visibility = "visible";
        }
        // View Legend
        obj = getElementObject("legend");
        if (obj != null) {
            obj.style.display = "block";
        }
        obj = getElementObject("legendTOC");
        if (obj != null) {
            obj.style.display = "block";
        }
        // View Glossary
        obj = getElementObject("glossary");
        if (obj != null) {
            obj.style.display = "block";
        }
        obj = getElementObject("glossaryTOC");
        if (obj != null) {
            obj.style.display = "block";
        }

        // Expand all XML Instance Representation tables
        expandAll(xiBoxes);
        // Collapse all Schema Component Representation tables
        collapseAll(scBoxes);

        // View Control buttons
        viewControlButtons(xiBoxes);
        viewControlButtons(scBoxes);
    }
}

/**
 * Opens up a window displaying the documentation
 * of a schema component in the XML Instance
 * Representation table.
 * 
 * @param compDesc      Description of schema component 
 * @param compName      Name of schema component 
 * @param docTextArray Array containing the paragraphs 
 *                           of the new document
 */
function viewDocumentation(compDesc, compName, docTextArray) {
  var width = 400;
  var height = 200;
  var locX = 100;
  var locY = 200;

  /* Generate content */
  var actualText = "<html>";
  actualText += "<head><title>";
  actualText += compDesc;
  if (compName != '') {
     actualText += ": " + compName;
  }
  actualText += "</title></head>";
  actualText += "<body bgcolor=\"#FFFFEE\">";
  // Title
  actualText += "<p style=\"font-family: Arial, sans-serif; font-size: 12pt; font-weight: bold; letter-spacing:1px;\">";
  actualText += compDesc;
  if (compName != '') {
     actualText += ": <span style=\"color:#006699\">" + compName + "</span>";
  }
  actualText += "</p>";
  // Documentation
  var idx;
  for (idx = 0; idx < docTextArray.length; idx++) {
     actualText += "<p style=\"font-family: Arial, sans-serif; font-size: 10pt;\">" + docTextArray[idx] + "</p>";
  }
  // Link to close window
  actualText += "<a href=\"javascript:void(0)\" onclick=\"window.close();\" style=\"font-family: Arial, sans-serif; font-size: 8pt;\">Close</a>";
  actualText += "</body></html>";

  /* Display window */
  windowCount++;
  var docWindow = window.open("", "documentation"+windowCount, "toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable,alwaysRaised,dependent,titlebar=no,width="+width+",height="+height+",screenX="+locX+",left="+locX+",screenY="+locY+",top="+locY);
  docWindow.document.write(actualText);
}

// -->
</script>
</head>
<body>
<h1>
<a name="top">OAGi Platform 1_1 OAGi Common Components -- Meta Documentation</a>
</h1>
<div style="float: right;">
<div style="display:none;" id="printerControls">
<input onclick="displayMode(this.checked)" type="checkbox" />Printer-friendly Version</div>
<script type="text/javascript">
<!--

var pc = getElementObject("printerControls");
if (pc != null) {
   pc.style.display="block";
}
               
// -->
</script>
<div style="display:none" id="globalControls">
<strong>XML Instance Representation:</strong>
<br />
<span style="margin-left: 1em; white-space: nowrap">[ <a onclick="expandAll(xiBoxes)" href="javascript:void(0)">Expand All</a> | <a onclick="collapseAll(xiBoxes)" href="javascript:void(0)">Collapse All</a> ]</span>
<br />
<br />
<strong>Schema Component Representation:</strong>
<br />
<span style="margin-left: 1em; white-space: nowrap">[ <a onclick="expandAll(scBoxes)" href="javascript:void(0)">Expand All</a> | <a onclick="collapseAll(scBoxes)" href="javascript:void(0)">Collapse All</a> ]</span>
</div>
<script type="text/javascript">
<!--

var gc = getElementObject("globalControls");
if (gc != null) {
   gc.style.display="block";
}
               
// -->
</script>
</div>
<h2>Table of Contents</h2>
<ul>
<li>
<a href="#SchemaProperties">Schema Document Properties</a>
</li>
<li>
<a href="#SchemaComponents">Global Schema Components</a>
<ul>
<li>
<a href="#type_BusinessObjectDocumentType">Complex Type: <strong>BusinessObjectDocumentType</strong>
</a>
</li>
<li>
<a href="#type_ApplicationAreaType">Complex Type: <strong>ApplicationAreaType</strong>
</a>
</li>
<li>
<a href="#type_SenderType">Complex Type: <strong>SenderType</strong>
</a>
</li>
<li>
<a href="#type_ReceiverType">Complex Type: <strong>ReceiverType</strong>
</a>
</li>
<li>
<a href="#type_SignatureType">Complex Type: <strong>SignatureType</strong>
</a>
</li>
<li>
<a href="#element_ApplicationArea">Element: <strong>ApplicationArea</strong>
</a>
</li>
<li>
<a href="#element_OriginalApplicationArea">Element: <strong>OriginalApplicationArea</strong>
</a>
</li>
<li>
<a href="#element_Sender">Element: <strong>Sender</strong>
</a>
</li>
<li>
<a href="#element_Receiver">Element: <strong>Receiver</strong>
</a>
</li>
<li>
<a href="#element_Signature">Element: <strong>Signature</strong>
</a>
</li>
<li>
<a href="#element_CreationDateTime">Element: <strong>CreationDateTime</strong>
</a>
</li>
<li>
<a href="#element_BODID">Element: <strong>BODID</strong>
</a>
</li>
<li>
<a href="#element_LogicalID">Element: <strong>LogicalID</strong>
</a>
</li>
<li>
<a href="#element_ComponentID">Element: <strong>ComponentID</strong>
</a>
</li>
<li>
<a href="#element_TaskID">Element: <strong>TaskID</strong>
</a>
</li>
<li>
<a href="#element_ReferenceID">Element: <strong>ReferenceID</strong>
</a>
</li>
<li>
<a href="#element_ConfirmationCode">Element: <strong>ConfirmationCode</strong>
</a>
</li>
<li>
<a href="#type_SuccessMessageType">Complex Type: <strong>SuccessMessageType</strong>
</a>
</li>
<li>
<a href="#type_FailureMessageType">Complex Type: <strong>FailureMessageType</strong>
</a>
</li>
<li>
<a href="#type_BODFailureMessageType">Complex Type: <strong>BODFailureMessageType</strong>
</a>
</li>
<li>
<a href="#type_BODSuccessMessageType">Complex Type: <strong>BODSuccessMessageType</strong>
</a>
</li>
<li>
<a href="#type_MessageType">Complex Type: <strong>MessageType</strong>
</a>
</li>
<li>
<a href="#element_NounSuccessMessage">Element: <strong>NounSuccessMessage</strong>
</a>
</li>
<li>
<a href="#element_BODSuccessMessage">Element: <strong>BODSuccessMessage</strong>
</a>
</li>
<li>
<a href="#element_NounFailureMessage">Element: <strong>NounFailureMessage</strong>
</a>
</li>
<li>
<a href="#element_BODFailureMessage">Element: <strong>BODFailureMessage</strong>
</a>
</li>
<li>
<a href="#element_PartialBODFailureMessage">Element: <strong>PartialBODFailureMessage</strong>
</a>
</li>
<li>
<a href="#element_ErrorProcessMessage">Element: <strong>ErrorProcessMessage</strong>
</a>
</li>
<li>
<a href="#element_WarningProcessMessage">Element: <strong>WarningProcessMessage</strong>
</a>
</li>
<li>
<a href="#type_ExpressionType">Complex Type: <strong>ExpressionType</strong>
</a>
</li>
<li>
<a href="#type_ActionExpressionType">Complex Type: <strong>ActionExpressionType</strong>
</a>
</li>
<li>
<a href="#type_ActionCriteriaType">Complex Type: <strong>ActionCriteriaType</strong>
</a>
</li>
<li>
<a href="#type_ResponseActionCriteriaType">Complex Type: <strong>ResponseActionCriteriaType</strong>
</a>
</li>
<li>
<a href="#type_ResponseExpressionType">Complex Type: <strong>ResponseExpressionType</strong>
</a>
</li>
<li>
<a href="#element_ActionExpression">Element: <strong>ActionExpression</strong>
</a>
</li>
<li>
<a href="#element_ActionCriteria">Element: <strong>ActionCriteria</strong>
</a>
</li>
<li>
<a href="#element_Expression">Element: <strong>Expression</strong>
</a>
</li>
<li>
<a href="#element_ResponseCriteria">Element: <strong>ResponseCriteria</strong>
</a>
</li>
<li>
<a href="#element_ResponseExpression">Element: <strong>ResponseExpression</strong>
</a>
</li>
<li>
<a href="#type_AcknowledgeType">Complex Type: <strong>AcknowledgeType</strong>
</a>
</li>
<li>
<a href="#type_CancelType">Complex Type: <strong>CancelType</strong>
</a>
</li>
<li>
<a href="#type_ChangeType">Complex Type: <strong>ChangeType</strong>
</a>
</li>
<li>
<a href="#type_ConfirmType">Complex Type: <strong>ConfirmType</strong>
</a>
</li>
<li>
<a href="#type_GetType">Complex Type: <strong>GetType</strong>
</a>
</li>
<li>
<a href="#type_LoadType">Complex Type: <strong>LoadType</strong>
</a>
</li>
<li>
<a href="#type_NotifyType">Complex Type: <strong>NotifyType</strong>
</a>
</li>
<li>
<a href="#type_PostType">Complex Type: <strong>PostType</strong>
</a>
</li>
<li>
<a href="#type_ProcessType">Complex Type: <strong>ProcessType</strong>
</a>
</li>
<li>
<a href="#type_RespondType">Complex Type: <strong>RespondType</strong>
</a>
</li>
<li>
<a href="#type_ShowType">Complex Type: <strong>ShowType</strong>
</a>
</li>
<li>
<a href="#type_SyncType">Complex Type: <strong>SyncType</strong>
</a>
</li>
<li>
<a href="#type_UpdateType">Complex Type: <strong>UpdateType</strong>
</a>
</li>
<li>
<a href="#element_Acknowledge">Element: <strong>Acknowledge</strong>
</a>
</li>
<li>
<a href="#element_Cancel">Element: <strong>Cancel</strong>
</a>
</li>
<li>
<a href="#element_Change">Element: <strong>Change</strong>
</a>
</li>
<li>
<a href="#element_Confirm">Element: <strong>Confirm</strong>
</a>
</li>
<li>
<a href="#element_Get">Element: <strong>Get</strong>
</a>
</li>
<li>
<a href="#element_Load">Element: <strong>Load</strong>
</a>
</li>
<li>
<a href="#element_Notify">Element: <strong>Notify</strong>
</a>
</li>
<li>
<a href="#element_Post">Element: <strong>Post</strong>
</a>
</li>
<li>
<a href="#element_Process">Element: <strong>Process</strong>
</a>
</li>
<li>
<a href="#element_Respond">Element: <strong>Respond</strong>
</a>
</li>
<li>
<a href="#element_Show">Element: <strong>Show</strong>
</a>
</li>
<li>
<a href="#element_Sync">Element: <strong>Sync</strong>
</a>
</li>
<li>
<a href="#element_Update">Element: <strong>Update</strong>
</a>
</li>
<li>
<a href="#type_GetListType">Complex Type: <strong>GetListType</strong>
</a>
</li>
<li>
<a href="#type_ListType">Complex Type: <strong>ListType</strong>
</a>
</li>
<li>
<a href="#element_GetList">Element: <strong>GetList</strong>
</a>
</li>
<li>
<a href="#element_List">Element: <strong>List</strong>
</a>
</li>
<li>
<a href="#element_Create">Element: <strong>Create</strong>
</a>
</li>
<li>
<a href="#element_Receive">Element: <strong>Receive</strong>
</a>
</li>
<li>
<a href="#element_Add">Element: <strong>Add</strong>
</a>
</li>
<li>
<a href="#element_Issue">Element: <strong>Issue</strong>
</a>
</li>
<li>
<a href="#element_Allocate">Element: <strong>Allocate</strong>
</a>
</li>
<li>
<a href="#type_VerbType">Complex Type: <strong>VerbType</strong>
</a>
</li>
<li>
<a href="#type_ActionVerbType">Complex Type: <strong>ActionVerbType</strong>
</a>
</li>
<li>
<a href="#type_RequestVerbType">Complex Type: <strong>RequestVerbType</strong>
</a>
</li>
<li>
<a href="#type_ResponseVerbType">Complex Type: <strong>ResponseVerbType</strong>
</a>
</li>
<li>
<a href="#type_ChangeStatusType">Complex Type: <strong>ChangeStatusType</strong>
</a>
</li>
<li>
<a href="#element_ChangeStatus">Element: <strong>ChangeStatus</strong>
</a>
</li>
<li>
<a href="#type_StatusBasisType">Complex Type: <strong>StatusBasisType</strong>
</a>
</li>
<li>
<a href="#type_StateChangeType">Complex Type: <strong>StateChangeType</strong>
</a>
</li>
<li>
<a href="#element_StateChange">Element: <strong>StateChange</strong>
</a>
</li>
<li>
<a href="#group_FreeFormTextGroup">Model Group: <strong>FreeFormTextGroup</strong>
</a>
</li>
<li>
<a href="#element_ProcessMessage">Element: <strong>ProcessMessage</strong>
</a>
</li>
</ul>
</li>
</ul>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h2>
<a name="SchemaProperties">Schema Document Properties</a>
</h2>
<table class="properties">
<tr>
<th>Target Namespace</th>
<td>
<span class="targetNS">http://www.openapplications.org/oagis/9</span>
</td>
</tr>
<tr>
<th>Element and Attribute Namespaces</th>
<td>
<ul>
<li>Global element and attribute declarations belong to this schema's target namespace.</li>
<li>By default, local element declarations belong to this schema's target namespace.</li>
<li>By default, local attribute declarations have no namespace.</li>
</ul>
</td>
</tr>
<tr>
<th>Schema Composition</th>
<td>
<ul>
<li>This schema includes components from the following schema document(s):<ul>
<li>Fields.xsd</li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<h3>Declared Namespaces</h3>
<table class="namespaces">
<tr>
<th>Prefix</th>
<th>Namespace</th>
</tr>
<tr>
<td>
<a name="ns_">Default namespace</a>
</td>
<td>
<span class="targetNS">http://www.openapplications.org/oagis/9</span>
</td>
</tr>
<tr>
<td>
<a name="ns_xml">xml</a>
</td>
<td>http://www.w3.org/XML/1998/namespace</td>
</tr>
<tr>
<td>
<a name="ns_xsd">xsd</a>
</td>
<td>http://www.w3.org/2001/XMLSchema</td>
</tr>
</table>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('schema_scbox'); return false;" class="control" id="schema_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="schema_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:schema</span> <span class="scTag">targetNamespace</span>="<span class="scContent">http://www.openapplications.org/oagis/9</span>" <span class="scTag">elementFormDefault</span>="<span class="scContent">qualified</span>" <span class="scTag">attributeFormDefault</span>="<span class="scContent">unqualified</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:include</span> <span class="scTag">schemaLocation</span>="<span class="scContent">Fields.xsd</span>"/&gt;</div>
<div style="margin-left: 1.5em" class="scContent">...</div>&lt;/<span class="scTag">xsd:schema</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('schema_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h2>
<a name="SchemaComponents">Global Schema Components</a>
</h2>
<h3>Complex Type: <a class="name" name="type_BusinessObjectDocumentType">BusinessObjectDocumentType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>BusinessObjectDocumentType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Is the schema based inheritance for all BODs. The logical model would also include the DataArea.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_BusinessObjectDocumentType_xibox'); return false;" class="control" id="type_BusinessObjectDocumentType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_BusinessObjectDocumentType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em"> releaseID="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[1]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Attribute', 'releaseID', docArray);">?</a>"</span>
<br />
<span style="margin-left: 0.5em"> versionID="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Attribute', 'versionID', docArray);">?</a>"</span>
<br />
<span style="margin-left: 0.5em"> systemEnvironmentCode="<span class="type">
<a href="javascript:void(0)" title="&quot;SystemEnvironmentCodeContentType&quot; type definition could not be found." onclick="alert('&quot;SystemEnvironmentCodeContentType&quot; type definition could not be found.');">SystemEnvironmentCodeContentType</a>
</span> <span class="occurs">[0..1]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Attribute', 'systemEnvironmentCode', docArray);">?</a>"</span>
<br />
<span style="margin-left: 0.5em"> languageCode="<span class="type">
<a href="javascript:void(0)" title="&quot;LanguageCodeContentType&quot; type definition could not be found." onclick="alert('&quot;LanguageCodeContentType&quot; type definition could not be found.');">LanguageCodeContentType</a>
</span> <span class="occurs">[0..1]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Attribute', 'languageCode', docArray);">?</a>"</span>&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ApplicationArea" title="Jump to &quot;ApplicationArea&quot; element declaration.">ApplicationArea</a>&gt; ... &lt;/<a href="#element_ApplicationArea" title="Jump to &quot;ApplicationArea&quot; element declaration.">ApplicationArea</a>&gt; <span class="occurs">[1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_BusinessObjectDocumentType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_BusinessObjectDocumentType_scbox'); return false;" class="control" id="type_BusinessObjectDocumentType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_BusinessObjectDocumentType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">BusinessObjectDocumentType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ApplicationArea" title="Jump to &quot;ApplicationArea&quot; element declaration.">ApplicationArea</a>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">releaseID</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">required</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">versionID</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">systemEnvironmentCode</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;SystemEnvironmentCodeContentType&quot; type definition could not be found." onclick="alert('&quot;SystemEnvironmentCodeContentType&quot; type definition could not be found.');">SystemEnvironmentCodeContentType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>" <span class="scTag">default</span>="<span class="scContent">Production</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">languageCode</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;LanguageCodeContentType&quot; type definition could not be found." onclick="alert('&quot;LanguageCodeContentType&quot; type definition could not be found.');">LanguageCodeContentType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>" <span class="scTag">default</span>="<span class="scContent">en-US</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_BusinessObjectDocumentType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ApplicationAreaType">ApplicationAreaType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ApplicationAreaType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ApplicationAreaType_xibox'); return false;" class="control" id="type_ApplicationAreaType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ApplicationAreaType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_Sender" title="Jump to &quot;Sender&quot; element declaration.">Sender</a>&gt; ... &lt;/<a href="#element_Sender" title="Jump to &quot;Sender&quot; element declaration.">Sender</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_Receiver" title="Jump to &quot;Receiver&quot; element declaration.">Receiver</a>&gt; ... &lt;/<a href="#element_Receiver" title="Jump to &quot;Receiver&quot; element declaration.">Receiver</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_CreationDateTime" title="Jump to &quot;CreationDateTime&quot; element declaration.">CreationDateTime</a>&gt; ... &lt;/<a href="#element_CreationDateTime" title="Jump to &quot;CreationDateTime&quot; element declaration.">CreationDateTime</a>&gt; <span class="occurs">[1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_Signature" title="Jump to &quot;Signature&quot; element declaration.">Signature</a>&gt; ... &lt;/<a href="#element_Signature" title="Jump to &quot;Signature&quot; element declaration.">Signature</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_BODID" title="Jump to &quot;BODID&quot; element declaration.">BODID</a>&gt; ... &lt;/<a href="#element_BODID" title="Jump to &quot;BODID&quot; element declaration.">BODID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ApplicationAreaType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ApplicationAreaType_scbox'); return false;" class="control" id="type_ApplicationAreaType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ApplicationAreaType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ApplicationAreaType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_Sender" title="Jump to &quot;Sender&quot; element declaration.">Sender</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_Receiver" title="Jump to &quot;Receiver&quot; element declaration.">Receiver</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_CreationDateTime" title="Jump to &quot;CreationDateTime&quot; element declaration.">CreationDateTime</a>
</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_Signature" title="Jump to &quot;Signature&quot; element declaration.">Signature</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_BODID" title="Jump to &quot;BODID&quot; element declaration.">BODID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ApplicationAreaType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_SenderType">SenderType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>SenderType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Identifies the sender of the given BOD instance<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_SenderType_xibox'); return false;" class="control" id="type_SenderType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_SenderType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>&gt; ... &lt;/<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>&gt; ... &lt;/<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_TaskID" title="Jump to &quot;TaskID&quot; element declaration.">TaskID</a>&gt; ... &lt;/<a href="#element_TaskID" title="Jump to &quot;TaskID&quot; element declaration.">TaskID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ReferenceID" title="Jump to &quot;ReferenceID&quot; element declaration.">ReferenceID</a>&gt; ... &lt;/<a href="#element_ReferenceID" title="Jump to &quot;ReferenceID&quot; element declaration.">ReferenceID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ConfirmationCode" title="Jump to &quot;ConfirmationCode&quot; element declaration.">ConfirmationCode</a>&gt; ... &lt;/<a href="#element_ConfirmationCode" title="Jump to &quot;ConfirmationCode&quot; element declaration.">ConfirmationCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;AuthorizationID&quot; element declaration could not be found." onclick="alert('&quot;AuthorizationID&quot; element declaration could not be found.');">AuthorizationID</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;AuthorizationID&quot; element declaration could not be found." onclick="alert('&quot;AuthorizationID&quot; element declaration could not be found.');">AuthorizationID</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_SenderType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_SenderType_scbox'); return false;" class="control" id="type_SenderType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_SenderType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">SenderType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_TaskID" title="Jump to &quot;TaskID&quot; element declaration.">TaskID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ReferenceID" title="Jump to &quot;ReferenceID&quot; element declaration.">ReferenceID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ConfirmationCode" title="Jump to &quot;ConfirmationCode&quot; element declaration.">ConfirmationCode</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;AuthorizationID&quot; element declaration could not be found." onclick="alert('&quot;AuthorizationID&quot; element declaration could not be found.');">AuthorizationID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_SenderType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ReceiverType">ReceiverType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ReceiverType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Identifies the intended receiver of the given BOD instance.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ReceiverType_xibox'); return false;" class="control" id="type_ReceiverType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ReceiverType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>&gt; ... &lt;/<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>&gt; ... &lt;/<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ReceiverType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ReceiverType_scbox'); return false;" class="control" id="type_ReceiverType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ReceiverType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ReceiverType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ReceiverType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_SignatureType">SignatureType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>SignatureType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Allows any digital Signatures to be added to the Instance of the BOD Instance in order to sign for any portion of the BOD content.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_SignatureType_xibox'); return false;" class="control" id="type_SignatureType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_SignatureType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em"> qualifyingAgencyId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em" class="other">Allow any elements from any namespace (strict validation). <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_SignatureType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_SignatureType_scbox'); return false;" class="control" id="type_SignatureType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_SignatureType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">SignatureType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:any</span> <span class="scTag">namespace</span>="<span class="scContent">##any</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">qualifyingAgencyId</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_SignatureType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ApplicationArea">ApplicationArea</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ApplicationArea</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ApplicationAreaType" title="Jump to &quot;ApplicationAreaType&quot; type definition.">ApplicationAreaType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Provides the information that an application may need to know in order to communicate in an integration of two or more business applications. The ApplicationArea is used at the applications layer of communication. While the integration frameworks web services and middleware provide the communication layer that OAGIS operates on top of.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ApplicationArea_xibox'); return false;" class="control" id="element_ApplicationArea_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ApplicationArea_xibox">
<div style="margin-left: 0em">&lt;ApplicationArea&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_Sender" title="Jump to &quot;Sender&quot; element declaration.">Sender</a>&gt; ... &lt;/<a href="#element_Sender" title="Jump to &quot;Sender&quot; element declaration.">Sender</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_Receiver" title="Jump to &quot;Receiver&quot; element declaration.">Receiver</a>&gt; ... &lt;/<a href="#element_Receiver" title="Jump to &quot;Receiver&quot; element declaration.">Receiver</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_CreationDateTime" title="Jump to &quot;CreationDateTime&quot; element declaration.">CreationDateTime</a>&gt; ... &lt;/<a href="#element_CreationDateTime" title="Jump to &quot;CreationDateTime&quot; element declaration.">CreationDateTime</a>&gt; <span class="occurs">[1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_Signature" title="Jump to &quot;Signature&quot; element declaration.">Signature</a>&gt; ... &lt;/<a href="#element_Signature" title="Jump to &quot;Signature&quot; element declaration.">Signature</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_BODID" title="Jump to &quot;BODID&quot; element declaration.">BODID</a>&gt; ... &lt;/<a href="#element_BODID" title="Jump to &quot;BODID&quot; element declaration.">BODID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/ApplicationArea&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ApplicationArea_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ApplicationArea_scbox'); return false;" class="control" id="element_ApplicationArea_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ApplicationArea_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ApplicationArea</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ApplicationAreaType" title="Jump to &quot;ApplicationAreaType&quot; type definition.">ApplicationAreaType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ApplicationArea_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_OriginalApplicationArea">OriginalApplicationArea</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>OriginalApplicationArea</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ApplicationAreaType" title="Jump to &quot;ApplicationAreaType&quot; type definition.">ApplicationAreaType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>A copy of the ApplicationArea for the original BOD that was processed. Present either as additional reference information, or for use in identifying the BOD in situations where a BODReference is not known.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_OriginalApplicationArea_xibox'); return false;" class="control" id="element_OriginalApplicationArea_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_OriginalApplicationArea_xibox">
<div style="margin-left: 0em">&lt;OriginalApplicationArea&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_Sender" title="Jump to &quot;Sender&quot; element declaration.">Sender</a>&gt; ... &lt;/<a href="#element_Sender" title="Jump to &quot;Sender&quot; element declaration.">Sender</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_Receiver" title="Jump to &quot;Receiver&quot; element declaration.">Receiver</a>&gt; ... &lt;/<a href="#element_Receiver" title="Jump to &quot;Receiver&quot; element declaration.">Receiver</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_CreationDateTime" title="Jump to &quot;CreationDateTime&quot; element declaration.">CreationDateTime</a>&gt; ... &lt;/<a href="#element_CreationDateTime" title="Jump to &quot;CreationDateTime&quot; element declaration.">CreationDateTime</a>&gt; <span class="occurs">[1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_Signature" title="Jump to &quot;Signature&quot; element declaration.">Signature</a>&gt; ... &lt;/<a href="#element_Signature" title="Jump to &quot;Signature&quot; element declaration.">Signature</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_BODID" title="Jump to &quot;BODID&quot; element declaration.">BODID</a>&gt; ... &lt;/<a href="#element_BODID" title="Jump to &quot;BODID&quot; element declaration.">BODID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/OriginalApplicationArea&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_OriginalApplicationArea_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_OriginalApplicationArea_scbox'); return false;" class="control" id="element_OriginalApplicationArea_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_OriginalApplicationArea_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">OriginalApplicationArea</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ApplicationAreaType" title="Jump to &quot;ApplicationAreaType&quot; type definition.">ApplicationAreaType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_OriginalApplicationArea_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Sender">Sender</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Sender</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_SenderType" title="Jump to &quot;SenderType&quot; type definition.">SenderType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Identifies characteristics and control identifiers that relate to the application that created the Business Object Document.  The sender area can indicate the logical location of the application and/or database server, the application, and the task that was processing to create the BOD.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Sender_xibox'); return false;" class="control" id="element_Sender_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Sender_xibox">
<div style="margin-left: 0em">&lt;Sender&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>&gt; ... &lt;/<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>&gt; ... &lt;/<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_TaskID" title="Jump to &quot;TaskID&quot; element declaration.">TaskID</a>&gt; ... &lt;/<a href="#element_TaskID" title="Jump to &quot;TaskID&quot; element declaration.">TaskID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ReferenceID" title="Jump to &quot;ReferenceID&quot; element declaration.">ReferenceID</a>&gt; ... &lt;/<a href="#element_ReferenceID" title="Jump to &quot;ReferenceID&quot; element declaration.">ReferenceID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ConfirmationCode" title="Jump to &quot;ConfirmationCode&quot; element declaration.">ConfirmationCode</a>&gt; ... &lt;/<a href="#element_ConfirmationCode" title="Jump to &quot;ConfirmationCode&quot; element declaration.">ConfirmationCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;AuthorizationID&quot; element declaration could not be found." onclick="alert('&quot;AuthorizationID&quot; element declaration could not be found.');">AuthorizationID</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;AuthorizationID&quot; element declaration could not be found." onclick="alert('&quot;AuthorizationID&quot; element declaration could not be found.');">AuthorizationID</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/Sender&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Sender_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Sender_scbox'); return false;" class="control" id="element_Sender_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Sender_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Sender</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_SenderType" title="Jump to &quot;SenderType&quot; type definition.">SenderType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Sender_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Receiver">Receiver</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Receiver</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ReceiverType" title="Jump to &quot;ReceiverType&quot; type definition.">ReceiverType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Identifies the intended receiver of the given BOD instance.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Receiver_xibox'); return false;" class="control" id="element_Receiver_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Receiver_xibox">
<div style="margin-left: 0em">&lt;Receiver&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>&gt; ... &lt;/<a href="#element_LogicalID" title="Jump to &quot;LogicalID&quot; element declaration.">LogicalID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>&gt; ... &lt;/<a href="#element_ComponentID" title="Jump to &quot;ComponentID&quot; element declaration.">ComponentID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Receiver&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Receiver_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Receiver_scbox'); return false;" class="control" id="element_Receiver_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Receiver_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Receiver</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ReceiverType" title="Jump to &quot;ReceiverType&quot; type definition.">ReceiverType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Receiver_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Signature">Signature</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Signature</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_SignatureType" title="Jump to &quot;SignatureType&quot; type definition.">SignatureType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>If the BOD is to be signed the signature element is included, otherwise it is not.
Signature supports any digital signature that maybe used by an implementation of OAGIS. The qualifyingAgency identifies the agency that provided the format for the signature.

This element supports any digital signature specification that is available today and in the future. This is accomplished by not actually defining the content but by allowing the implementation to specify the digital signature to be used via an external XML Schema namespace declaration. The Signature element is defined to have any content from any other namespace. 

This allows the user to carry a digital signature in the xml instance of a BOD. The choice of which digital signature to use is left up to the user and their integration needs.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Signature_xibox'); return false;" class="control" id="element_Signature_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Signature_xibox">
<div style="margin-left: 0em">&lt;Signature<br />
<span style="margin-left: 0.5em"> qualifyingAgencyId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em" class="other">Allow any elements from any namespace (strict validation). <span class="occurs">[0..1]</span>
</div>&lt;/Signature&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Signature_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Signature_scbox'); return false;" class="control" id="element_Signature_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Signature_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Signature</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_SignatureType" title="Jump to &quot;SignatureType&quot; type definition.">SignatureType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Signature_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_CreationDateTime">CreationDateTime</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>CreationDateTime</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;DateTimeType&quot; type definition could not be found." onclick="alert('&quot;DateTimeType&quot; type definition could not be found.');">DateTimeType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>is the date time stamp that the given instance of the Business Object Document was created.  This date must not be modified during the life of the Business Object Document.
<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_CreationDateTime_xibox'); return false;" class="control" id="element_CreationDateTime_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_CreationDateTime_xibox">
<div style="margin-left: 0em">&lt;CreationDateTime&gt; <span class="type">
<a href="javascript:void(0)" title="&quot;DateTimeType&quot; type definition could not be found." onclick="alert('&quot;DateTimeType&quot; type definition could not be found.');">DateTimeType</a>
</span> &lt;/CreationDateTime&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_CreationDateTime_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_CreationDateTime_scbox'); return false;" class="control" id="element_CreationDateTime_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_CreationDateTime_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">CreationDateTime</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;DateTimeType&quot; type definition could not be found." onclick="alert('&quot;DateTimeType&quot; type definition could not be found.');">DateTimeType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_CreationDateTime_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_BODID">BODID</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>BODID</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The BODId provides a place to carry a Globally Unique Identifier (GUID) that will make each Business Object Document instance uniquely identifiable.

This is a critical success factor to enable software developers to use the Globally Unique Identifier (GUID) to build the following services or capabilities:
1. Legally binding transactions,
2. Transaction logging,
3. Exception handling,
4. Re-sending,
5. Reporting,
6. Confirmations,
7. Security.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_BODID_xibox'); return false;" class="control" id="element_BODID_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_BODID_xibox">
<div style="margin-left: 0em">&lt;BODID&gt; <span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span> &lt;/BODID&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_BODID_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_BODID_scbox'); return false;" class="control" id="element_BODID_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_BODID_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">BODID</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_BODID_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_LogicalID">LogicalID</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>LogicalID</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Provides the logical location of the server and applications from which the Business Object Document originated. It can be used to establish a logical to physical mapping, however its use is optional.

Each system or combination of systems should maintain an external central reference table containing the logical names or logical addresses of the application systems in the integration configuration.  This enables the logical names to be mapped to the physical network addresses of the resources needed on the network.  

Note:  The technical implementation of this Domain Naming Service is not dictated by this specification. 

This logical to physical mapping may be done at execution time by the application itself or by a middleware transport mechanism, depending on the integration architecture used.

This provides for a simple but effective directory access capability while maintaining application independence from the physical location of those resources on the network<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_LogicalID_xibox'); return false;" class="control" id="element_LogicalID_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_LogicalID_xibox">
<div style="margin-left: 0em">&lt;LogicalID&gt; <span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span> &lt;/LogicalID&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_LogicalID_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_LogicalID_scbox'); return false;" class="control" id="element_LogicalID_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_LogicalID_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">LogicalID</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_LogicalID_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ComponentID">ComponentID</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ComponentID</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Provides a finer level of control than Logical Identifier and represents the business application that issued the Business Object Document.  Its use is optional.

The Open Applications Group has not constructed the list of valid Component names.  A suggestion for naming is to use the application component names used in the scenario diagrams in section two of OAGIS. Example Components may be Inventory, or Payroll.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ComponentID_xibox'); return false;" class="control" id="element_ComponentID_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ComponentID_xibox">
<div style="margin-left: 0em">&lt;ComponentID&gt; <span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span> &lt;/ComponentID&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ComponentID_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ComponentID_scbox'); return false;" class="control" id="element_ComponentID_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ComponentID_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ComponentID</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ComponentID_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_TaskID">TaskID</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>TaskID</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Describes the business event that initiated the need for the Business Object Document to be created. Its use is optional. Although the Task may differ depending on the specific implementation, it is important to enable drill back capability. Example Tasks may be Receipt or Adjustment.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_TaskID_xibox'); return false;" class="control" id="element_TaskID_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_TaskID_xibox">
<div style="margin-left: 0em">&lt;TaskID&gt; <span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span> &lt;/TaskID&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_TaskID_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_TaskID_scbox'); return false;" class="control" id="element_TaskID_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_TaskID_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">TaskID</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_TaskID_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ReferenceID">ReferenceID</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ReferenceID</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Enables the sending application to indicate the instance identifier of the event or task that caused the BOD to be created. This allows drill back from the BOD message into the sending application. The may be required in environments where an audit trail must be maintained for all transactions.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ReferenceID_xibox'); return false;" class="control" id="element_ReferenceID_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ReferenceID_xibox">
<div style="margin-left: 0em">&lt;ReferenceID&gt; <span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span> &lt;/ReferenceID&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ReferenceID_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ReferenceID_scbox'); return false;" class="control" id="element_ReferenceID_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ReferenceID_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ReferenceID</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;IdentifierType&quot; type definition could not be found." onclick="alert('&quot;IdentifierType&quot; type definition could not be found.');">IdentifierType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ReferenceID_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ConfirmationCode">ConfirmationCode</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ConfirmationCode</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;ConfirmationResponseCodeType&quot; type definition could not be found." onclick="alert('&quot;ConfirmationResponseCodeType&quot; type definition could not be found.');">ConfirmationResponseCodeType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Is an option controlled by the Sender business application.  It is a request to the receiving application to send back a confirmation BOD to the sender. The confirmation Business Object Document may indicate the successful processing of the original Business Object Document or return error conditions if the original Business Object Document was unsuccessful.

The confirmation request has the following valid values:

Never - No confirmation Business Object Document requested

OnError - OnError send back a confirmation Business Object Document only if an error has occurred

Always - Always send a confirmation Business Object Document regardless<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ConfirmationCode_xibox'); return false;" class="control" id="element_ConfirmationCode_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ConfirmationCode_xibox">
<div style="margin-left: 0em">&lt;ConfirmationCode&gt; <span class="type">
<a href="javascript:void(0)" title="&quot;ConfirmationResponseCodeType&quot; type definition could not be found." onclick="alert('&quot;ConfirmationResponseCodeType&quot; type definition could not be found.');">ConfirmationResponseCodeType</a>
</span> &lt;/ConfirmationCode&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ConfirmationCode_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ConfirmationCode_scbox'); return false;" class="control" id="element_ConfirmationCode_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ConfirmationCode_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ConfirmationCode</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;ConfirmationResponseCodeType&quot; type definition could not be found." onclick="alert('&quot;ConfirmationResponseCodeType&quot; type definition could not be found.');">ConfirmationResponseCodeType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ConfirmationCode_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_SuccessMessageType">SuccessMessageType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>SuccessMessageType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The processing was a success. Possible, non-fatal warning messages may appear here.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_SuccessMessageType_xibox'); return false;" class="control" id="type_SuccessMessageType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_SuccessMessageType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ProcessMessage" title="Jump to &quot;ProcessMessage&quot; element declaration.">ProcessMessage</a>&gt; ... &lt;/<a href="#element_ProcessMessage" title="Jump to &quot;ProcessMessage&quot; element declaration.">ProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_SuccessMessageType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_SuccessMessageType_scbox'); return false;" class="control" id="type_SuccessMessageType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_SuccessMessageType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">SuccessMessageType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ProcessMessage" title="Jump to &quot;ProcessMessage&quot; element declaration.">ProcessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_SuccessMessageType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_FailureMessageType">FailureMessageType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>FailureMessageType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The processing has failed. Provides a list of error and warning messages that explain the failure.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_FailureMessageType_xibox'); return false;" class="control" id="type_FailureMessageType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_FailureMessageType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; ... &lt;/<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_FailureMessageType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_FailureMessageType_scbox'); return false;" class="control" id="type_FailureMessageType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_FailureMessageType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">FailureMessageType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_FailureMessageType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_BODFailureMessageType">BODFailureMessageType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>BODFailureMessageType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_BODFailureMessageType_xibox'); return false;" class="control" id="type_BODFailureMessageType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_BODFailureMessageType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; ... &lt;/<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_NounFailureMessage" title="Jump to &quot;NounFailureMessage&quot; element declaration.">NounFailureMessage</a>&gt; ... &lt;/<a href="#element_NounFailureMessage" title="Jump to &quot;NounFailureMessage&quot; element declaration.">NounFailureMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; ... &lt;/<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_BODFailureMessageType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_BODFailureMessageType_scbox'); return false;" class="control" id="type_BODFailureMessageType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_BODFailureMessageType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">BODFailureMessageType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_NounFailureMessage" title="Jump to &quot;NounFailureMessage&quot; element declaration.">NounFailureMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_BODFailureMessageType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_BODSuccessMessageType">BODSuccessMessageType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>BODSuccessMessageType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_BODSuccessMessageType_xibox'); return false;" class="control" id="type_BODSuccessMessageType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_BODSuccessMessageType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; ... &lt;/<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_BODSuccessMessageType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_BODSuccessMessageType_scbox'); return false;" class="control" id="type_BODSuccessMessageType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_BODSuccessMessageType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">BODSuccessMessageType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_BODSuccessMessageType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_MessageType">MessageType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>MessageType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_MessageType_xibox'); return false;" class="control" id="type_MessageType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_MessageType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<span style="margin-left: 1.5em" class="group">Start Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a> <span class="occurs">[0..1]</span>
</span>
<br />
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; <span class="occurs">[0..*]</span>
</div>
<span style="margin-left: 1.5em" class="group">End Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a>
</span>
<br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_MessageType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_MessageType_scbox'); return false;" class="control" id="type_MessageType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_MessageType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">MessageType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:group</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_MessageType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_NounSuccessMessage">NounSuccessMessage</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>NounSuccessMessage</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_SuccessMessageType" title="Jump to &quot;SuccessMessageType&quot; type definition.">SuccessMessageType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>yes</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Indicates that the processing of this noun has succeeded; may provide non-fatal warning messages that arose during the processing of the noun.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_NounSuccessMessage_xibox'); return false;" class="control" id="element_NounSuccessMessage_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_NounSuccessMessage_xibox">
<div style="margin-left: 0em">&lt;NounSuccessMessage&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ProcessMessage" title="Jump to &quot;ProcessMessage&quot; element declaration.">ProcessMessage</a>&gt; ... &lt;/<a href="#element_ProcessMessage" title="Jump to &quot;ProcessMessage&quot; element declaration.">ProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/NounSuccessMessage&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_NounSuccessMessage_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_NounSuccessMessage_scbox'); return false;" class="control" id="element_NounSuccessMessage_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_NounSuccessMessage_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">NounSuccessMessage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_SuccessMessageType" title="Jump to &quot;SuccessMessageType&quot; type definition.">SuccessMessageType</a>
</span>
</span>" <span class="scTag">nillable</span>="<span class="scContent">true</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_NounSuccessMessage_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_BODSuccessMessage">BODSuccessMessage</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>BODSuccessMessage</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_BODSuccessMessageType" title="Jump to &quot;BODSuccessMessageType&quot; type definition.">BODSuccessMessageType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The processing of the BOD was a success. Possible, non-fatal warning messages may appear here. Specific outcomes of processing each noun are reported in each of the NounOutcome elements.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_BODSuccessMessage_xibox'); return false;" class="control" id="element_BODSuccessMessage_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_BODSuccessMessage_xibox">
<div style="margin-left: 0em">&lt;BODSuccessMessage&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; ... &lt;/<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/BODSuccessMessage&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_BODSuccessMessage_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_BODSuccessMessage_scbox'); return false;" class="control" id="element_BODSuccessMessage_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_BODSuccessMessage_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">BODSuccessMessage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_BODSuccessMessageType" title="Jump to &quot;BODSuccessMessageType&quot; type definition.">BODSuccessMessageType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_BODSuccessMessage_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_NounFailureMessage">NounFailureMessage</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>NounFailureMessage</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_FailureMessageType" title="Jump to &quot;FailureMessageType&quot; type definition.">FailureMessageType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>yes</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Indicates that the processing of this noun has failed, and provides error and warning messages that arose during the processing of the noun.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_NounFailureMessage_xibox'); return false;" class="control" id="element_NounFailureMessage_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_NounFailureMessage_xibox">
<div style="margin-left: 0em">&lt;NounFailureMessage&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; ... &lt;/<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/NounFailureMessage&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_NounFailureMessage_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_NounFailureMessage_scbox'); return false;" class="control" id="element_NounFailureMessage_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_NounFailureMessage_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">NounFailureMessage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_FailureMessageType" title="Jump to &quot;FailureMessageType&quot; type definition.">FailureMessageType</a>
</span>
</span>" <span class="scTag">nillable</span>="<span class="scContent">true</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_NounFailureMessage_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_BODFailureMessage">BODFailureMessage</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>BODFailureMessage</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_BODFailureMessageType" title="Jump to &quot;BODFailureMessageType&quot; type definition.">BODFailureMessageType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The processing of the BOD has failed. Provides a list of error and warning messages that explain the failure. Specific outcomes of processing each noun are reported in each of the NounOutcome elements.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_BODFailureMessage_xibox'); return false;" class="control" id="element_BODFailureMessage_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_BODFailureMessage_xibox">
<div style="margin-left: 0em">&lt;BODFailureMessage&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; ... &lt;/<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_NounFailureMessage" title="Jump to &quot;NounFailureMessage&quot; element declaration.">NounFailureMessage</a>&gt; ... &lt;/<a href="#element_NounFailureMessage" title="Jump to &quot;NounFailureMessage&quot; element declaration.">NounFailureMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; ... &lt;/<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/BODFailureMessage&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_BODFailureMessage_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_BODFailureMessage_scbox'); return false;" class="control" id="element_BODFailureMessage_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_BODFailureMessage_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">BODFailureMessage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_BODFailureMessageType" title="Jump to &quot;BODFailureMessageType&quot; type definition.">BODFailureMessageType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_BODFailureMessage_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_PartialBODFailureMessage">PartialBODFailureMessage</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>PartialBODFailureMessage</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_BODFailureMessageType" title="Jump to &quot;BODFailureMessageType&quot; type definition.">BODFailureMessageType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The processing of at least one noun in the BOD has failed. Error and warning messages may explain the failure. Specific outcomes of processing each noun are reported in each of the NounOutcome elements.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_PartialBODFailureMessage_xibox'); return false;" class="control" id="element_PartialBODFailureMessage_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_PartialBODFailureMessage_xibox">
<div style="margin-left: 0em">&lt;PartialBODFailureMessage&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; ... &lt;/<a href="#element_ErrorProcessMessage" title="Jump to &quot;ErrorProcessMessage&quot; element declaration.">ErrorProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; ... &lt;/<a href="#element_WarningProcessMessage" title="Jump to &quot;WarningProcessMessage&quot; element declaration.">WarningProcessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_NounFailureMessage" title="Jump to &quot;NounFailureMessage&quot; element declaration.">NounFailureMessage</a>&gt; ... &lt;/<a href="#element_NounFailureMessage" title="Jump to &quot;NounFailureMessage&quot; element declaration.">NounFailureMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; ... &lt;/<a href="#element_NounSuccessMessage" title="Jump to &quot;NounSuccessMessage&quot; element declaration.">NounSuccessMessage</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/PartialBODFailureMessage&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_PartialBODFailureMessage_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_PartialBODFailureMessage_scbox'); return false;" class="control" id="element_PartialBODFailureMessage_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_PartialBODFailureMessage_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">PartialBODFailureMessage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_BODFailureMessageType" title="Jump to &quot;BODFailureMessageType&quot; type definition.">BODFailureMessageType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_PartialBODFailureMessage_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ErrorProcessMessage">ErrorProcessMessage</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ErrorProcessMessage</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_MessageType" title="Jump to &quot;MessageType&quot; type definition.">MessageType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Error message encountered during processing.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ErrorProcessMessage_xibox'); return false;" class="control" id="element_ErrorProcessMessage_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ErrorProcessMessage_xibox">
<div style="margin-left: 0em">&lt;ErrorProcessMessage&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<span style="margin-left: 1.5em" class="group">Start Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a> <span class="occurs">[0..1]</span>
</span>
<br />
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; <span class="occurs">[0..*]</span>
</div>
<span style="margin-left: 1.5em" class="group">End Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a>
</span>
<br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/ErrorProcessMessage&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ErrorProcessMessage_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ErrorProcessMessage_scbox'); return false;" class="control" id="element_ErrorProcessMessage_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ErrorProcessMessage_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ErrorProcessMessage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_MessageType" title="Jump to &quot;MessageType&quot; type definition.">MessageType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ErrorProcessMessage_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_WarningProcessMessage">WarningProcessMessage</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>WarningProcessMessage</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_MessageType" title="Jump to &quot;MessageType&quot; type definition.">MessageType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Non-fatal warning message encountered during processing.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_WarningProcessMessage_xibox'); return false;" class="control" id="element_WarningProcessMessage_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_WarningProcessMessage_xibox">
<div style="margin-left: 0em">&lt;WarningProcessMessage&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<span style="margin-left: 1.5em" class="group">Start Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a> <span class="occurs">[0..1]</span>
</span>
<br />
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; <span class="occurs">[0..*]</span>
</div>
<span style="margin-left: 1.5em" class="group">End Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a>
</span>
<br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/WarningProcessMessage&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_WarningProcessMessage_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_WarningProcessMessage_scbox'); return false;" class="control" id="element_WarningProcessMessage_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_WarningProcessMessage_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">WarningProcessMessage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_MessageType" title="Jump to &quot;MessageType&quot; type definition.">MessageType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_WarningProcessMessage_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ExpressionType">ExpressionType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> &lt; <strong>ExpressionType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ExpressionType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>ReturnCriteria identifies the content that is to be returned, given query success. In essence, the expression here has the effect of filtering the part(s) of the found element(s) that are to be returned.

ReturnCriteria plays no role in the query itself. That is handled as a match against the request BOD's noun exemplar. 

ReturnCriteria allows the sender of the BOD to indicate which information (down to the field level) is requested to be returned, given that the query has been successful in matching the exemplar to existing nouns. 

That is, in a GetListPurchaseOrder, if one or more PurchaseOrders with a TotalPrice = $1M were found, ReturnCriteria tells the BOD recipient which parts of the PurchaseOrder should be populated with content when the response (ShowPurchaseOrder) is formulated.

The expressionLanguage indicates the expression language being used. In order for the ReturnCriteria expression to be evaluable by the BOD recipient, the recipient must be capable of processing and interpreting the specified expression language. XPath is the default, due to its ubiquity among XML processing technologies. <br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ExpressionType_xibox'); return false;" class="control" id="type_ExpressionType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ExpressionType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="newFields"> expressionLanguage="<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<span style="margin-left: 1.5em"> <span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> </span>
<br />&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ExpressionType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ExpressionType_scbox'); return false;" class="control" id="type_ExpressionType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ExpressionType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ExpressionType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:simpleContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">expressionLanguage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:simpleContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ExpressionType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ActionExpressionType">ActionExpressionType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> &lt; <strong>ActionExpressionType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ActionExpressionType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>ReturnCriteria identifies the content that is to be returned, given query success. In essence, the expression here has the effect of filtering the part(s) of the found element(s) that are to be returned.

ReturnCriteria plays no role in the query itself. That is handled as a match against the request BOD's noun exemplar. 

ReturnCriteria allows the sender of the BOD to indicate which information (down to the field level) is requested to be returned, given that the query has been successful in matching the exemplar to existing nouns. 

That is, in a GetListPurchaseOrder, if one or more PurchaseOrders with a TotalPrice = $1M were found, ReturnCriteria tells the BOD recipient which parts of the PurchaseOrder should be populated with content when the response (ShowPurchaseOrder) is formulated.

The expressionLanguage indicates the expression language being used. In order for the ReturnCriteria expression to be evaluable by the BOD recipient, the recipient must be capable of processing and interpreting the specified expression language. XPath is the default, due to its ubiquity among XML processing technologies. <br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ActionExpressionType_xibox'); return false;" class="control" id="type_ActionExpressionType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ActionExpressionType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="newFields"> actionCode="<span class="type">
<a href="javascript:void(0)" title="&quot;ActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ActionCodeContentType&quot; type definition could not be found.');">ActionCodeContentType</a>
</span> <span class="occurs">[1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> expressionLanguage="<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<span style="margin-left: 1.5em"> <span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> </span>
<br />&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ActionExpressionType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ActionExpressionType_scbox'); return false;" class="control" id="type_ActionExpressionType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ActionExpressionType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ActionExpressionType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:simpleContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">actionCode</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;ActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ActionCodeContentType&quot; type definition could not be found.');">ActionCodeContentType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">required</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">expressionLanguage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:simpleContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ActionExpressionType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ActionCriteriaType">ActionCriteriaType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ActionCriteriaType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ActionCriteriaType_xibox'); return false;" class="control" id="type_ActionCriteriaType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ActionCriteriaType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionExpression" title="Jump to &quot;ActionExpression&quot; element declaration.">ActionExpression</a>&gt; ... &lt;/<a href="#element_ActionExpression" title="Jump to &quot;ActionExpression&quot; element declaration.">ActionExpression</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>&gt; ... &lt;/<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ActionCriteriaType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ActionCriteriaType_scbox'); return false;" class="control" id="type_ActionCriteriaType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ActionCriteriaType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ActionCriteriaType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ActionExpression" title="Jump to &quot;ActionExpression&quot; element declaration.">ActionExpression</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ActionCriteriaType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ResponseActionCriteriaType">ResponseActionCriteriaType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ResponseActionCriteriaType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ResponseActionCriteriaType_xibox'); return false;" class="control" id="type_ResponseActionCriteriaType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ResponseActionCriteriaType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ResponseExpression" title="Jump to &quot;ResponseExpression&quot; element declaration.">ResponseExpression</a>&gt; ... &lt;/<a href="#element_ResponseExpression" title="Jump to &quot;ResponseExpression&quot; element declaration.">ResponseExpression</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>&gt; ... &lt;/<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ResponseActionCriteriaType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ResponseActionCriteriaType_scbox'); return false;" class="control" id="type_ResponseActionCriteriaType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ResponseActionCriteriaType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ResponseActionCriteriaType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ResponseExpression" title="Jump to &quot;ResponseExpression&quot; element declaration.">ResponseExpression</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ResponseActionCriteriaType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ResponseExpressionType">ResponseExpressionType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> &lt; <strong>ResponseExpressionType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ResponseExpressionType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>ReturnCriteria identifies the content that is to be returned, given query success. In essence, the expression here has the effect of filtering the part(s) of the found element(s) that are to be returned.

ReturnCriteria plays no role in the query itself. That is handled as a match against the request BOD's noun exemplar. 

ReturnCriteria allows the sender of the BOD to indicate which information (down to the field level) is requested to be returned, given that the query has been successful in matching the exemplar to existing nouns. 

That is, in a GetListPurchaseOrder, if one or more PurchaseOrders with a TotalPrice = $1M were found, ReturnCriteria tells the BOD recipient which parts of the PurchaseOrder should be populated with content when the response (ShowPurchaseOrder) is formulated.

The expressionLanguage indicates the expression language being used. In order for the ReturnCriteria expression to be evaluable by the BOD recipient, the recipient must be capable of processing and interpreting the specified expression language. XPath is the default, due to its ubiquity among XML processing technologies. <br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ResponseExpressionType_xibox'); return false;" class="control" id="type_ResponseExpressionType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ResponseExpressionType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="newFields"> actionCode="<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseActionCodeContentType&quot; type definition could not be found.');">ResponseActionCodeContentType</a>
</span> <span class="occurs">[1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> expressionLanguage="<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<span style="margin-left: 1.5em"> <span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> </span>
<br />&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ResponseExpressionType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ResponseExpressionType_scbox'); return false;" class="control" id="type_ResponseExpressionType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ResponseExpressionType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ResponseExpressionType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:simpleContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">actionCode</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseActionCodeContentType&quot; type definition could not be found.');">ResponseActionCodeContentType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">required</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">expressionLanguage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:simpleContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ResponseExpressionType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ActionExpression">ActionExpression</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ActionExpression</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ActionExpressionType" title="Jump to &quot;ActionExpressionType&quot; type definition.">ActionExpressionType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ActionExpression_xibox'); return false;" class="control" id="element_ActionExpression_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ActionExpression_xibox">
<div style="margin-left: 0em">&lt;ActionExpression<br />
<span style="margin-left: 0.5em"> actionCode="<span class="type">
<a href="javascript:void(0)" title="&quot;ActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ActionCodeContentType&quot; type definition could not be found.');">ActionCodeContentType</a>
</span> <span class="occurs">[1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> expressionLanguage="<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<span style="margin-left: 1.5em"> <span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> </span>
<br />&lt;/ActionExpression&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ActionExpression_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ActionExpression_scbox'); return false;" class="control" id="element_ActionExpression_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ActionExpression_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ActionExpression</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionExpressionType" title="Jump to &quot;ActionExpressionType&quot; type definition.">ActionExpressionType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ActionExpression_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ActionCriteria">ActionCriteria</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ActionCriteria</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ActionCriteriaType" title="Jump to &quot;ActionCriteriaType&quot; type definition.">ActionCriteriaType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Identifies with the ActionExpression the level by carrying a value of the expressionLanguage (this is typically XPath) within the BOD that the actionCode is to be performed. The ChangeStatus communicates just that the Change Status. <br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ActionCriteria_xibox'); return false;" class="control" id="element_ActionCriteria_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ActionCriteria_xibox">
<div style="margin-left: 0em">&lt;ActionCriteria&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionExpression" title="Jump to &quot;ActionExpression&quot; element declaration.">ActionExpression</a>&gt; ... &lt;/<a href="#element_ActionExpression" title="Jump to &quot;ActionExpression&quot; element declaration.">ActionExpression</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>&gt; ... &lt;/<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/ActionCriteria&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ActionCriteria_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ActionCriteria_scbox'); return false;" class="control" id="element_ActionCriteria_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ActionCriteria_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ActionCriteria</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionCriteriaType" title="Jump to &quot;ActionCriteriaType&quot; type definition.">ActionCriteriaType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ActionCriteria_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Expression">Expression</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Expression</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ExpressionType" title="Jump to &quot;ExpressionType&quot; type definition.">ExpressionType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Expression_xibox'); return false;" class="control" id="element_Expression_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Expression_xibox">
<div style="margin-left: 0em">&lt;Expression<br />
<span style="margin-left: 0.5em"> expressionLanguage="<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<span style="margin-left: 1.5em"> <span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> </span>
<br />&lt;/Expression&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Expression_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Expression_scbox'); return false;" class="control" id="element_Expression_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Expression_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Expression</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ExpressionType" title="Jump to &quot;ExpressionType&quot; type definition.">ExpressionType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Expression_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ResponseCriteria">ResponseCriteria</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ResponseCriteria</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ResponseActionCriteriaType" title="Jump to &quot;ResponseActionCriteriaType&quot; type definition.">ResponseActionCriteriaType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>ResponseCriteria identifies the content that is to be returned, given query success. In essence, the expression here has the effect of filtering the part(s) of the found element(s) that are to be returned.

ReturnCriteria plays no role in the query itself. That is handled as a match against the request BOD's noun exemplar. 

ReturnCriteria allows the sender of the BOD to indicate which information (down to the field level) is requested to be returned, given that the query has been successful in matching the exemplar to existing nouns. 

That is, in a GetListPurchaseOrder, if one or more PurchaseOrders with a TotalPrice = $1M were found, ReturnCriteria tells the BOD recipient which parts of the PurchaseOrder should be populated with content when the response (ShowPurchaseOrder) is formulated.

The expressionLanguage indicates the expression language being used. In order for the ReturnCriteria expression to be evaluable by the BOD recipient, the recipient must be capable of processing and interpreting the specified expression language. XPath is the default, due to its ubiquity among XML processing technologies. <br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ResponseCriteria_xibox'); return false;" class="control" id="element_ResponseCriteria_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ResponseCriteria_xibox">
<div style="margin-left: 0em">&lt;ResponseCriteria&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ResponseExpression" title="Jump to &quot;ResponseExpression&quot; element declaration.">ResponseExpression</a>&gt; ... &lt;/<a href="#element_ResponseExpression" title="Jump to &quot;ResponseExpression&quot; element declaration.">ResponseExpression</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>&gt; ... &lt;/<a href="#element_ChangeStatus" title="Jump to &quot;ChangeStatus&quot; element declaration.">ChangeStatus</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/ResponseCriteria&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ResponseCriteria_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ResponseCriteria_scbox'); return false;" class="control" id="element_ResponseCriteria_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ResponseCriteria_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ResponseCriteria</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ResponseActionCriteriaType" title="Jump to &quot;ResponseActionCriteriaType&quot; type definition.">ResponseActionCriteriaType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ResponseCriteria_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ResponseExpression">ResponseExpression</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ResponseExpression</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ResponseExpressionType" title="Jump to &quot;ResponseExpressionType&quot; type definition.">ResponseExpressionType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>ResponseExpression identifies a pointer to the Component being provided as a response to a request. This point is provided using an appropriate value of the given expressionLanguage indicated. The actionCode is intended to indicate what has occured with the given component and/or instance of the given component.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ResponseExpression_xibox'); return false;" class="control" id="element_ResponseExpression_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ResponseExpression_xibox">
<div style="margin-left: 0em">&lt;ResponseExpression<br />
<span style="margin-left: 0.5em"> actionCode="<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseActionCodeContentType&quot; type definition could not be found.');">ResponseActionCodeContentType</a>
</span> <span class="occurs">[1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> expressionLanguage="<span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<span style="margin-left: 1.5em"> <span class="type">
<a href="javascript:void(0)" title="&quot;TokenType&quot; type definition could not be found." onclick="alert('&quot;TokenType&quot; type definition could not be found.');">TokenType</a>
</span> </span>
<br />&lt;/ResponseExpression&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ResponseExpression_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ResponseExpression_scbox'); return false;" class="control" id="element_ResponseExpression_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ResponseExpression_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ResponseExpression</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ResponseExpressionType" title="Jump to &quot;ResponseExpressionType&quot; type definition.">ResponseExpressionType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ResponseExpression_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_AcknowledgeType">AcknowledgeType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span> (by extension) &lt; <strong>AcknowledgeType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>AcknowledgeType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_AcknowledgeType_xibox'); return false;" class="control" id="type_AcknowledgeType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_AcknowledgeType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_AcknowledgeType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_AcknowledgeType_scbox'); return false;" class="control" id="type_AcknowledgeType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_AcknowledgeType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">AcknowledgeType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_AcknowledgeType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_CancelType">CancelType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension) &lt; <strong>CancelType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>CancelType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_CancelType_xibox'); return false;" class="control" id="type_CancelType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_CancelType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_CancelType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_CancelType_scbox'); return false;" class="control" id="type_CancelType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_CancelType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">CancelType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_CancelType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ChangeType">ChangeType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension) &lt; <strong>ChangeType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ChangeType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ChangeType_xibox'); return false;" class="control" id="type_ChangeType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ChangeType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="newFields"> responseCode="<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseActionCodeContentType&quot; type definition could not be found.');">ResponseActionCodeContentType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ChangeType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ChangeType_scbox'); return false;" class="control" id="type_ChangeType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ChangeType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ChangeType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">responseCode</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseActionCodeContentType&quot; type definition could not be found.');">ResponseActionCodeContentType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ChangeType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ConfirmType">ConfirmType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span> (by extension) &lt; <strong>ConfirmType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ConfirmType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ConfirmType_xibox'); return false;" class="control" id="type_ConfirmType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ConfirmType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ConfirmType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ConfirmType_scbox'); return false;" class="control" id="type_ConfirmType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ConfirmType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ConfirmType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ConfirmType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_GetType">GetType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_RequestVerbType" title="Jump to &quot;RequestVerbType&quot; type definition.">RequestVerbType</a>
</span> (by extension) &lt; <strong>GetType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>
<ul>
<li>
<span class="type">
<a href="#type_GetListType" title="Jump to &quot;GetListType&quot; type definition.">GetListType</a>
</span> (by extension)</li>
</ul>
</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>GetType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_GetType_xibox'); return false;" class="control" id="type_GetType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_GetType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="newFields"> uniqueIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> maxItems="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> recordSetSaveIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> recordSetStartNumber="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> recordSetReferenceId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; ... &lt;/<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; <span class="occurs">[1..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_GetType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_GetType_scbox'); return false;" class="control" id="type_GetType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_GetType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">GetType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_RequestVerbType" title="Jump to &quot;RequestVerbType&quot; type definition.">RequestVerbType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">uniqueIndicator</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">maxItems</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">recordSetSaveIndicator</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">recordSetStartNumber</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">recordSetReferenceId</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_GetType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_LoadType">LoadType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension) &lt; <strong>LoadType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>LoadType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_LoadType_xibox'); return false;" class="control" id="type_LoadType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_LoadType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_LoadType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_LoadType_scbox'); return false;" class="control" id="type_LoadType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_LoadType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">LoadType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_LoadType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_NotifyType">NotifyType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension) &lt; <strong>NotifyType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>NotifyType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_NotifyType_xibox'); return false;" class="control" id="type_NotifyType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_NotifyType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_NotifyType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_NotifyType_scbox'); return false;" class="control" id="type_NotifyType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_NotifyType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">NotifyType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_NotifyType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_PostType">PostType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension) &lt; <strong>PostType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>PostType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_PostType_xibox'); return false;" class="control" id="type_PostType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_PostType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_PostType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_PostType_scbox'); return false;" class="control" id="type_PostType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_PostType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">PostType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_PostType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ProcessType">ProcessType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension) &lt; <strong>ProcessType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ProcessType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ProcessType_xibox'); return false;" class="control" id="type_ProcessType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ProcessType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="newFields"> acknowledgeCode="<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseCodeContentType&quot; type definition could not be found.');">ResponseCodeContentType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ProcessType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ProcessType_scbox'); return false;" class="control" id="type_ProcessType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ProcessType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ProcessType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">acknowledgeCode</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseCodeContentType&quot; type definition could not be found.');">ResponseCodeContentType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ProcessType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_RespondType">RespondType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span> (by extension) &lt; <strong>RespondType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>RespondType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_RespondType_xibox'); return false;" class="control" id="type_RespondType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_RespondType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_RespondType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_RespondType_scbox'); return false;" class="control" id="type_RespondType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_RespondType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">RespondType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_RespondType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ShowType">ShowType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span> (by extension) &lt; <strong>ShowType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>
<ul>
<li>
<span class="type">
<a href="#type_ListType" title="Jump to &quot;ListType&quot; type definition.">ListType</a>
</span> (by extension)</li>
</ul>
</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ShowType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ShowType_xibox'); return false;" class="control" id="type_ShowType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ShowType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="newFields"> recordSetStartNumber="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> recordSetCount="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> recordSetTotal="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> recordSetCompleteIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="newFields"> recordSetReferenceId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ShowType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ShowType_scbox'); return false;" class="control" id="type_ShowType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ShowType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ShowType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">recordSetStartNumber</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">recordSetCount</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">recordSetTotal</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">recordSetCompleteIndicator</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:attribute</span> <span class="scTag">name</span>="<span class="scContent">recordSetReferenceId</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span>
</span>" <span class="scTag">use</span>="<span class="scContent">optional</span>"/&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ShowType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_SyncType">SyncType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension) &lt; <strong>SyncType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>SyncType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_SyncType_xibox'); return false;" class="control" id="type_SyncType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_SyncType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_SyncType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_SyncType_scbox'); return false;" class="control" id="type_SyncType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_SyncType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">SyncType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_SyncType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_UpdateType">UpdateType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension) &lt; <strong>UpdateType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>UpdateType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_UpdateType_xibox'); return false;" class="control" id="type_UpdateType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_UpdateType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_UpdateType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_UpdateType_scbox'); return false;" class="control" id="type_UpdateType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_UpdateType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">UpdateType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_UpdateType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Acknowledge">Acknowledge</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Acknowledge</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_AcknowledgeType" title="Jump to &quot;AcknowledgeType&quot; type definition.">AcknowledgeType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Acknowledge verb is used to acknowledge the application receipt of a Process request.  This function conveys the result of the original request.  An example of this is Acknowledge PO, where a Process PO has been issued and the corresponding business application acknowledges the receipt of the PO and responds with an acceptance or a counter offer.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Acknowledge_xibox'); return false;" class="control" id="element_Acknowledge_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Acknowledge_xibox">
<div style="margin-left: 0em">&lt;Acknowledge&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/Acknowledge&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Acknowledge_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Acknowledge_scbox'); return false;" class="control" id="element_Acknowledge_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Acknowledge_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Acknowledge</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_AcknowledgeType" title="Jump to &quot;AcknowledgeType&quot; type definition.">AcknowledgeType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Acknowledge_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Cancel">Cancel</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Cancel</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_CancelType" title="Jump to &quot;CancelType&quot; type definition.">CancelType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Cancel verb is used when the sender of the BOD is not the owner of the data, but is sending a request for the document to be canceled.An example is the Cancel PO where the business implications must be calculated and a simple data processing term such as delete can not fully convey the business meaning and required processing associated with the meaning.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Cancel_xibox'); return false;" class="control" id="element_Cancel_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Cancel_xibox">
<div style="margin-left: 0em">&lt;Cancel&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Cancel&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Cancel_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Cancel_scbox'); return false;" class="control" id="element_Cancel_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Cancel_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Cancel</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_CancelType" title="Jump to &quot;CancelType&quot; type definition.">CancelType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Cancel_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Change">Change</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Change</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ChangeType" title="Jump to &quot;ChangeType&quot; type definition.">ChangeType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Change verb is used when the sender of the BOD is not the owner of the data, but is sending a request for the document to be changed.An example of this is Change REQUISITN, where the original document needs to be changed based on a specific business event.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Change_xibox'); return false;" class="control" id="element_Change_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Change_xibox">
<div style="margin-left: 0em">&lt;Change<br />
<span style="margin-left: 0.5em"> responseCode="<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseActionCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseActionCodeContentType&quot; type definition could not be found.');">ResponseActionCodeContentType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Change&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Change_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Change_scbox'); return false;" class="control" id="element_Change_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Change_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Change</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ChangeType" title="Jump to &quot;ChangeType&quot; type definition.">ChangeType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Change_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Confirm">Confirm</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Confirm</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ConfirmType" title="Jump to &quot;ConfirmType&quot; type definition.">ConfirmType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Confirm verb is used to respond to a request to confirm the receipt of information by the receiving system. The request for confirmation is set by the sending application in the ApplicationArea\Sender\Confirmation field of the original BOD.  The Confirm conveys the result of the original request i.e. whether or not the message was understood and was successfully processed.  An example of this is Confirm BOD.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Confirm_xibox'); return false;" class="control" id="element_Confirm_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Confirm_xibox">
<div style="margin-left: 0em">&lt;Confirm&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/Confirm&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Confirm_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Confirm_scbox'); return false;" class="control" id="element_Confirm_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Confirm_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Confirm</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ConfirmType" title="Jump to &quot;ConfirmType&quot; type definition.">ConfirmType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Confirm_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Get">Get</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Get</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_GetType" title="Jump to &quot;GetType&quot; type definition.">GetType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Get verb is to communicate to a business software component a request for an existing piece or pieces of information to be returned.  The Get may be paired with most of the nouns defined in the OAGIS specification.The response to this request is the Show verb.  The behavior of a BOD with a Get verb is quite predictable across the nouns it is paired with.The Get is designed to retrieval  of information by using that information's primary retrieval field, or key field.  The Get verb may also be used to request several documents at once.  Selection Criteria:There are two types of selection capabilities for most BOD's that use the Get verb.1)  The first selection capability is called Field-Based Selection.  Within a Get-based Business Object Document, the first Data Type that occurs in a specific BOD structure is commonly used to provide the Field-Based Selection criteria.  This is always defined within the specific BOD and is commonly the required fields for that specific Data type.The Field-Based Selection enables the requester to provide a value or values (in the case of multiple required Field Identifiers), in the required fields.  Then the responding component uses those values to find and return the requested information to the originating business software component.2)  The second type of selection capability for Get-based BODs is called Data Type Selection.  Data Type selection enables the requester to identify which Data Types within the noun are requested to be returned in the response.  The use of this capability is described for each corresponding Data Type for all BODs that use the Get verb.  The Data Types are identified for retrieval within the Get instance of a BOD by including the name of the Data Type in the meta data but without any Field Identifiers or Segments identified within the Data Type. This will signify to the responding application that all of the data that corresponds to that Data Type is to be included in the response.If the Data Type is not requested, the Data Type identifier is not included in the Get request and this will signify to the responding component that the Data Type is not to be returned.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Get_xibox'); return false;" class="control" id="element_Get_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Get_xibox">
<div style="margin-left: 0em">&lt;Get<br />
<span style="margin-left: 0.5em"> uniqueIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> maxItems="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetSaveIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetStartNumber="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetReferenceId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; ... &lt;/<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; <span class="occurs">[1..*]</span>
</div>&lt;/Get&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Get_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Get_scbox'); return false;" class="control" id="element_Get_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Get_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Get</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_GetType" title="Jump to &quot;GetType&quot; type definition.">GetType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Get_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Load">Load</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Load</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_LoadType" title="Jump to &quot;LoadType&quot; type definition.">LoadType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>This verb is used to initiate the adding of a document or data entity to another business application.  Generally this verb is used when maintenance to the document will then pass to the receiving application permanently.  An example of this is Load Payable or Load Receivable, where once the request is processed, the sending application has no direct control over the document or entity again.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Load_xibox'); return false;" class="control" id="element_Load_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Load_xibox">
<div style="margin-left: 0em">&lt;Load&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Load&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Load_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Load_scbox'); return false;" class="control" id="element_Load_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Load_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Load</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_LoadType" title="Jump to &quot;LoadType&quot; type definition.">LoadType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Load_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Notify">Notify</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Notify</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_NotifyType" title="Jump to &quot;NotifyType&quot; type definition.">NotifyType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>Notify is used to inform the receiving party that an event has occurred or document has been created. For example, a supplier may have a proposed order that is sent to a trading partner. The noun will contain the data that has been proposed. An optional ConfirmBOD can be sent as a response.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Notify_xibox'); return false;" class="control" id="element_Notify_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Notify_xibox">
<div style="margin-left: 0em">&lt;Notify&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Notify&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Notify_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Notify_scbox'); return false;" class="control" id="element_Notify_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Notify_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Notify</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_NotifyType" title="Jump to &quot;NotifyType&quot; type definition.">NotifyType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Notify_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Post">Post</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Post</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_PostType" title="Jump to &quot;PostType&quot; type definition.">PostType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Post verb is used to describe specific processing in a more fine grained manner beyond add, change or delete processing.  An example is Post JOURNAL, where information is posted to a general ledger set of financial records.  The business use of the word is used instead of the data processing term for the sake of clarity.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Post_xibox'); return false;" class="control" id="element_Post_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Post_xibox">
<div style="margin-left: 0em">&lt;Post&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Post&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Post_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Post_scbox'); return false;" class="control" id="element_Post_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Post_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Post</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_PostType" title="Jump to &quot;PostType&quot; type definition.">PostType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Post_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Process">Process</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Process</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ProcessType" title="Jump to &quot;ProcessType&quot; type definition.">ProcessType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Process verb is used to request processing of the associated noun by the receiving application or business to party. In a typical external exchange scenario a Process BOD is considered to be a legally binding message. For example, if a customer sends a ProcessPurchaseOrder BOD to a supplier and the supplier acknowlegdes with a positive AcknowledgePurchaseOrder, then the customer is obligated to fullfil the agreement, unless of course other BODs are allowed to cancel or change the original order.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Process_xibox'); return false;" class="control" id="element_Process_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Process_xibox">
<div style="margin-left: 0em">&lt;Process<br />
<span style="margin-left: 0.5em"> acknowledgeCode="<span class="type">
<a href="javascript:void(0)" title="&quot;ResponseCodeContentType&quot; type definition could not be found." onclick="alert('&quot;ResponseCodeContentType&quot; type definition could not be found.');">ResponseCodeContentType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Process&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Process_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Process_scbox'); return false;" class="control" id="element_Process_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Process_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Process</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ProcessType" title="Jump to &quot;ProcessType&quot; type definition.">ProcessType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Process_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Respond">Respond</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Respond</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_RespondType" title="Jump to &quot;RespondType&quot; type definition.">RespondType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Respond verb is used to communicate relative to another document. It may be used to communicate agreement, questions, answers to a question, or disagreement with the related document.  An example is the RequestForQuote and Quote document pair. An RequestForQuote is issued to a set of business partners. If one of the partners needs clarification on an item, a RespondRequestForQuote is sent to the originating partner.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Respond_xibox'); return false;" class="control" id="element_Respond_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Respond_xibox">
<div style="margin-left: 0em">&lt;Respond&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/Respond&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Respond_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Respond_scbox'); return false;" class="control" id="element_Respond_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Respond_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Respond</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_RespondType" title="Jump to &quot;RespondType&quot; type definition.">RespondType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Respond_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Show">Show</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Show</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ShowType" title="Jump to &quot;ShowType&quot; type definition.">ShowType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Show verb is used when sending the information about a specific instance of a business document or entity.  The Show verb may be used to respond to a Get request or it can be used in a publish scenario, where it pushes information to other applications based on a business event.Although BODs based on this verb do not commonly cause updates to occur, there may be times when the component receiving the Show decides to use the information it receives to update.  This is entirely the decision of the receiving software component and is not forbidden.The behavior of the Show verb is quite straight forward with one exception.  The Show response to any Get request needs to read the request carefully to ensure the response is returning the requested Data Types.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Show_xibox'); return false;" class="control" id="element_Show_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Show_xibox">
<div style="margin-left: 0em">&lt;Show<br />
<span style="margin-left: 0.5em"> recordSetStartNumber="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetCount="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetTotal="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetCompleteIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetReferenceId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/Show&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Show_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Show_scbox'); return false;" class="control" id="element_Show_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Show_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Show</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ShowType" title="Jump to &quot;ShowType&quot; type definition.">ShowType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Show_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Sync">Sync</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Sync</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_SyncType" title="Jump to &quot;SyncType&quot; type definition.">SyncType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Sync verb is used when the owner of the data is passing or publishing that information or change in information to other software components.  This is to be used when the receiver of the SyncBOD does not own the data.  This verb is commonly used when mass changes are necessary or when a publish and subscribe mechanism is used in the integration architecture.The purposes of this verb include application integrity and ease of data entry for the business user by enabling a single point of input.  <br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Sync_xibox'); return false;" class="control" id="element_Sync_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Sync_xibox">
<div style="margin-left: 0em">&lt;Sync&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Sync&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Sync_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Sync_scbox'); return false;" class="control" id="element_Sync_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Sync_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Sync</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_SyncType" title="Jump to &quot;SyncType&quot; type definition.">SyncType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Sync_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Update">Update</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Update</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_UpdateType" title="Jump to &quot;UpdateType&quot; type definition.">UpdateType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>The Update verb is used to describe specific processing in a more fine-grained manner beyond add, change or delete processing.  An example is the update of inspection information from one business application to another.  The event is not adding a document, or changing fields per se, it is communicating the occurrence of an event as well as the corresponding data that accompanies the event.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Update_xibox'); return false;" class="control" id="element_Update_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Update_xibox">
<div style="margin-left: 0em">&lt;Update&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Update&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Update_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Update_scbox'); return false;" class="control" id="element_Update_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Update_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Update</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_UpdateType" title="Jump to &quot;UpdateType&quot; type definition.">UpdateType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Update_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_GetListType">GetListType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_RequestVerbType" title="Jump to &quot;RequestVerbType&quot; type definition.">RequestVerbType</a>
</span> (by extension) &lt; <span class="type">
<a href="#type_GetType" title="Jump to &quot;GetType&quot; type definition.">GetType</a>
</span> (by extension) &lt; <strong>GetListType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>GetListType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_GetListType_xibox'); return false;" class="control" id="type_GetListType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_GetListType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="inherited"> uniqueIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="inherited"> maxItems="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="inherited"> recordSetSaveIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="inherited"> recordSetStartNumber="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="inherited"> recordSetReferenceId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; ... &lt;/<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; <span class="occurs">[1..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_GetListType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_GetListType_scbox'); return false;" class="control" id="type_GetListType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_GetListType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">GetListType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_GetType" title="Jump to &quot;GetType&quot; type definition.">GetType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_GetListType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ListType">ListType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span> (by extension) &lt; <span class="type">
<a href="#type_ShowType" title="Jump to &quot;ShowType&quot; type definition.">ShowType</a>
</span> (by extension) &lt; <strong>ListType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ListType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ListType_xibox'); return false;" class="control" id="type_ListType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ListType_xibox">
<div style="margin-left: 0em">&lt;...<br />
<span style="margin-left: 0.5em" class="inherited"> recordSetStartNumber="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="inherited"> recordSetCount="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="inherited"> recordSetTotal="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="inherited"> recordSetCompleteIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em" class="inherited"> recordSetReferenceId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ListType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ListType_scbox'); return false;" class="control" id="type_ListType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ListType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ListType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_ShowType" title="Jump to &quot;ShowType&quot; type definition.">ShowType</a>
</span>
</span>"/&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ListType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_GetList">GetList</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>GetList</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_GetListType" title="Jump to &quot;GetListType&quot; type definition.">GetListType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>In an effort to simpilify the usage of the verbs the GetList verb is being deprecated as of OAGIS 9.0, the GetList will still be provided for the next three releases at which time it is scheduled to be removed from OAGIS.  As such for all new development we recommend that you use the Get verb which may serve the same function of the GetList verb has in the past.

The purpose of the GetList verb is to enable a business software component to request summary information for one or more occurrences of a specific noun from another business software component.

The GetList may be paired with most of the nouns in the OAGIS specification.The response to this request is a BOD using the List verb. The GetList is designed to retrieve multiple occurrences of data such as all of the sales orders or all of the purchase orders within a requested range.  It does not require an exact match of the key fields in order to retrieve information.  It may use a range selection criteria with a "from" and "to" selection capability.  This behavior is quite different from the Get verb, which is designed to retrieve a specific noun using a specific key field.The GetList verb also enables the retrieval of information across several documents by using selection fields.  An example of this could be requesting all sales order lines for a specific item.  This type of functionality is limited to the capabilities of the responding application and needs to be determined during the implementation project.   More details on this capability will be described below. 

GetList attributes:
o	maxitems attribute is a number that indicates the number of maximum items to be returned.
o	rssave attribute is a Boolean flag that indicates whether the result set should be saved on the sending system if maxitems is exceeded.
o	rsstart attribute is a number of the starting record for the next section of the result set. If it is omitted, it is to be assumed the first of the maxitems.
o	rsref attribute is a string that represents the implementation-specific result set identifier for subsequent requests.

Selection Criteria:
There are two types of selection capabilities enabled by the BODs that use the GetList verb.
1)  Field-Based Selection

Allows the requesting system to ask for information that matches the data provided. It also allows the requestor to indicate the information that to be returned by specifying the ReturnCriteria indicated on the GetList Verb.

2) Range Selection

Allows the requesting system to provide a range of values for known data. This is accomplished by providing two occurances of the Noun. The first occurance indicates the "From" the second occurance indicates the "To" occurance. Again the requestor can  indicate the information that to be returned by specifying the ReturnCriteria indicated on the GetList Verb.
<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_GetList_xibox'); return false;" class="control" id="element_GetList_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_GetList_xibox">
<div style="margin-left: 0em">&lt;GetList<br />
<span style="margin-left: 0.5em"> uniqueIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> maxItems="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetSaveIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetStartNumber="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetReferenceId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; ... &lt;/<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; <span class="occurs">[1..*]</span>
</div>&lt;/GetList&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_GetList_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_GetList_scbox'); return false;" class="control" id="element_GetList_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_GetList_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">GetList</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_GetListType" title="Jump to &quot;GetListType&quot; type definition.">GetListType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_GetList_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_List">List</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>List</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ListType" title="Jump to &quot;ListType&quot; type definition.">ListType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>In an effort to simpilify the usage of the verbs the List verb is being deprecated as of OAGIS 9.0, the List will still be provided for the next three releases at which time it is scheduled to be removed from OAGIS.  As such for all new development we recommend that you use the Show verb which may serve the same function of the List verb has in the past.


The purpose of the List verb is to enable a business software component to respond to a GetList request or to proactively send a listing of summary information containing many instances of occurrences of data for a noun to one or more other business software components.The results of a List may then be used as is, or they may be used to select a specific instance of a document or entity in order to issue a detail Get request.Although BODs based on this verb do not commonly cause updates to occur, there may be times when the component receiving the List decides to use the information it receives to update.  This is entirely the decision of the receiving software component and is not forbidden.The behavior of the List verb is quite straight forward with a few exceptions.  The List response to any GetList request needs to read the request carefully to ensure the response is returning the requested Data Types. The List needs to ensure the response to the GetList does not exceed the maxItems value.The List needs to find the specific Field Identifiers that are used for the Field-Based Selection or Range-Based Selection and process them accordingly.

The attributes associated with the List BODs are as follows:
o	rsstart attribute is a number that idicates the starting record for the section of the resulting set returned in the list message. This value should always match the rsstart value in the originating GetList BOD.
o	rscount attribute is a number that indicates the number of records returned in the message. The subsequent request for additional records should have a rsstart value of rscount + 1.
o	rstotal attribute is a number that indicates the total number of records in the result set.
o	rscomplete attribute is a Boolean that indicates that the list provided exhaust the possible values.
o	rsref attribute is a string that represents the implementation-specific result set identifier for subsequent requests.
			<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_List_xibox'); return false;" class="control" id="element_List_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_List_xibox">
<div style="margin-left: 0em">&lt;List<br />
<span style="margin-left: 0.5em"> recordSetStartNumber="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetCount="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetTotal="<span class="type">
<a href="javascript:void(0)" title="&quot;PositiveIntegerNumericType&quot; type definition could not be found." onclick="alert('&quot;PositiveIntegerNumericType&quot; type definition could not be found.');">PositiveIntegerNumericType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetCompleteIndicator="<span class="type">
<a href="javascript:void(0)" title="&quot;IndicatorType&quot; type definition could not be found." onclick="alert('&quot;IndicatorType&quot; type definition could not be found.');">IndicatorType</a>
</span> <span class="occurs">[0..1]</span>"</span>
<br />
<span style="margin-left: 0.5em"> recordSetReferenceId="<span class="type">
<a href="javascript:void(0)" title="&quot;NormalizedStringType&quot; type definition could not be found." onclick="alert('&quot;NormalizedStringType&quot; type definition could not be found.');">NormalizedStringType</a>
</span> <span class="occurs">[0..1]</span>"</span>&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/List&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_List_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_List_scbox'); return false;" class="control" id="element_List_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_List_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">List</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ListType" title="Jump to &quot;ListType&quot; type definition.">ListType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_List_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Create">Create</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Create</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>In an effort to simpilify the usage of the verbs the Create verb is being deprecated as of OAGIS 9.0, the Create will still be provided for the next three releases at which time it is scheduled to be removed from OAGIS.  As such for all new development we recommend that you use the Process verb which may serve the same function of the Create verb has in the past.


The Create verb is used to describe specific processing in a more fine grained manner beyond add, change or delete processing.  This is generally used when the processing is initiating the building of a document, rather than moving a document from one system to another.  Examples of this include Create PRODORDER and Create BOM.
In these cases, the documents have not been constructed and need to be.  This differs from the Add PO or Add REQUISITN processing as those requests refer to a document that has already been established and the document is being communicated to another business application.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Create_xibox'); return false;" class="control" id="element_Create_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Create_xibox">
<div style="margin-left: 0em">&lt;Create&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Create&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Create_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Create_scbox'); return false;" class="control" id="element_Create_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Create_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Create</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Create_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Receive">Receive</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Receive</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>In an effort to simpilify the usage of the verbs the Receive verb is being deprecated as of OAGIS 9.0, the Receive will still be provided for the next three releases at which time it is scheduled to be removed from OAGIS.  As such for all new development we recommend that you use the Process verb which may serve the same function of the Receive verb has in the past.

The Receive verb is used to describe specific processing in a more fine grained manner beyond add, change or delete processing.  An example is ReceivePurchaseOrder, where a Purchase Order that has been issued and processed has shipments received against it.  The use of the data processing term, change, is not specific enough in the business context.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Receive_xibox'); return false;" class="control" id="element_Receive_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Receive_xibox">
<div style="margin-left: 0em">&lt;Receive&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Receive&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Receive_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Receive_scbox'); return false;" class="control" id="element_Receive_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Receive_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Receive</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Receive_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Add">Add</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Add</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>In an effort to simpilify the usage of the verbs the Add verb is being deprecated as of OAGIS 9.0, the Add will still be provided for the next three releases at which time it is scheduled to be removed from OAGIS.  As such for all new development we recommend that you use the Process verb which may serve the same function of the Add verb has in the past.

The Add verb is used to initiate the adding of a document or data entity to another business application.  Add is used when the sender of the BOD is not the owner of the data, but is sending a request for the document to be created on by the system that is the owner of the data.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Add_xibox'); return false;" class="control" id="element_Add_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Add_xibox">
<div style="margin-left: 0em">&lt;Add&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Add&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Add_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Add_scbox'); return false;" class="control" id="element_Add_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Add_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Add</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Add_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Issue">Issue</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Issue</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>In an effort to simpilify the usage of the verbs the Issue verb is being deprecated as of OAGIS 9.0, the Issue will still be provided for the next three releases at which time it is scheduled to be removed from OAGIS.  As such for all new development we recommend that you use the Process verb which may serve the same function of the Issue verb has in the past.

This verb is used to describe specific processing in a more fine grained manner beyond add, change or delete processing.  An example is the issue of material from inventory.  The business use of the word is used instead of the data processing term for the sake of clarity.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Issue_xibox'); return false;" class="control" id="element_Issue_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Issue_xibox">
<div style="margin-left: 0em">&lt;Issue&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Issue&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Issue_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Issue_scbox'); return false;" class="control" id="element_Issue_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Issue_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Issue</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Issue_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_Allocate">Allocate</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>Allocate</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
<tr>
<th>Documentation</th>
<td>In an effort to simpilify the usage of the verbs the Allocate verb is being deprecated as of OAGIS 9.0, the Allocate will still be provided for the next three releases at which time it is scheduled to be removed from OAGIS.  As such for all new development we recommend that you use the Process verb which may serve the same function of the Allocate verb has in the past.

The Allocate verb is used to describe specific processing in a more fine grained manner beyond add, change or delete processing.  An example of this is the allocating of costs from one business application or entity to another. The business oriented word is used instead of the data processing term for the sake of clarity.<br /> More information at: <a href="http://www.openapplications.org/oagis/9.0" title="http://www.openapplications.org/oagis/9.0">http://www.openapplications.org/oagis/9.0</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_Allocate_xibox'); return false;" class="control" id="element_Allocate_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_Allocate_xibox">
<div style="margin-left: 0em">&lt;Allocate&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/Allocate&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Allocate_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_Allocate_scbox'); return false;" class="control" id="element_Allocate_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_Allocate_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">Allocate</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_Allocate_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_VerbType">VerbType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>
<ul>
<li>
<span class="type">
<a href="#type_ActionVerbType" title="Jump to &quot;ActionVerbType&quot; type definition.">ActionVerbType</a>
</span> (by extension)<ul>
<li>
<span class="type">
<a href="#type_CancelType" title="Jump to &quot;CancelType&quot; type definition.">CancelType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_ChangeType" title="Jump to &quot;ChangeType&quot; type definition.">ChangeType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_LoadType" title="Jump to &quot;LoadType&quot; type definition.">LoadType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_NotifyType" title="Jump to &quot;NotifyType&quot; type definition.">NotifyType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_PostType" title="Jump to &quot;PostType&quot; type definition.">PostType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_ProcessType" title="Jump to &quot;ProcessType&quot; type definition.">ProcessType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_SyncType" title="Jump to &quot;SyncType&quot; type definition.">SyncType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_UpdateType" title="Jump to &quot;UpdateType&quot; type definition.">UpdateType</a>
</span> (by extension)</li>
</ul>
</li>
<li>
<span class="type">
<a href="#type_RequestVerbType" title="Jump to &quot;RequestVerbType&quot; type definition.">RequestVerbType</a>
</span> (by extension)<ul>
<li>
<span class="type">
<a href="#type_GetType" title="Jump to &quot;GetType&quot; type definition.">GetType</a>
</span> (by extension)<ul>
<li>
<span class="type">
<a href="#type_GetListType" title="Jump to &quot;GetListType&quot; type definition.">GetListType</a>
</span> (by extension)</li>
</ul>
</li>
</ul>
</li>
<li>
<span class="type">
<a href="#type_ResponseVerbType" title="Jump to &quot;ResponseVerbType&quot; type definition.">ResponseVerbType</a>
</span> (by extension)<ul>
<li>
<span class="type">
<a href="#type_AcknowledgeType" title="Jump to &quot;AcknowledgeType&quot; type definition.">AcknowledgeType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_ConfirmType" title="Jump to &quot;ConfirmType&quot; type definition.">ConfirmType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_RespondType" title="Jump to &quot;RespondType&quot; type definition.">RespondType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_ShowType" title="Jump to &quot;ShowType&quot; type definition.">ShowType</a>
</span> (by extension)<ul>
<li>
<span class="type">
<a href="#type_ListType" title="Jump to &quot;ListType&quot; type definition.">ListType</a>
</span> (by extension)</li>
</ul>
</li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>VerbType</td>
</tr>
<tr>
<th>Abstract</th>
<td>yes</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_VerbType_xibox'); return false;" class="control" id="type_VerbType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_VerbType_xibox">
<div style="margin-left: 0em">&lt;.../&gt; </div>
</div>
<script type="text/javascript">
<!--
setState('type_VerbType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_VerbType_scbox'); return false;" class="control" id="type_VerbType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_VerbType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">VerbType</span>" <span class="scTag">abstract</span>="<span class="scContent">true</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_VerbType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ActionVerbType">ActionVerbType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <strong>ActionVerbType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>
<ul>
<li>
<span class="type">
<a href="#type_CancelType" title="Jump to &quot;CancelType&quot; type definition.">CancelType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_ChangeType" title="Jump to &quot;ChangeType&quot; type definition.">ChangeType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_LoadType" title="Jump to &quot;LoadType&quot; type definition.">LoadType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_NotifyType" title="Jump to &quot;NotifyType&quot; type definition.">NotifyType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_PostType" title="Jump to &quot;PostType&quot; type definition.">PostType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_ProcessType" title="Jump to &quot;ProcessType&quot; type definition.">ProcessType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_SyncType" title="Jump to &quot;SyncType&quot; type definition.">SyncType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_UpdateType" title="Jump to &quot;UpdateType&quot; type definition.">UpdateType</a>
</span> (by extension)</li>
</ul>
</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ActionVerbType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ActionVerbType_xibox'); return false;" class="control" id="type_ActionVerbType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ActionVerbType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="newFields">&lt;<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; ... &lt;/<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ActionVerbType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ActionVerbType_scbox'); return false;" class="control" id="type_ActionVerbType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ActionVerbType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ActionVerbType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ActionCriteria" title="Jump to &quot;ActionCriteria&quot; element declaration.">ActionCriteria</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ActionVerbType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_RequestVerbType">RequestVerbType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <strong>RequestVerbType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>
<ul>
<li>
<span class="type">
<a href="#type_GetType" title="Jump to &quot;GetType&quot; type definition.">GetType</a>
</span> (by extension)<ul>
<li>
<span class="type">
<a href="#type_GetListType" title="Jump to &quot;GetListType&quot; type definition.">GetListType</a>
</span> (by extension)</li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>RequestVerbType</td>
</tr>
<tr>
<th>Abstract</th>
<td>yes</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_RequestVerbType_xibox'); return false;" class="control" id="type_RequestVerbType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_RequestVerbType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="newFields">&lt;<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; ... &lt;/<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>&gt; <span class="occurs">[1..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_RequestVerbType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_RequestVerbType_scbox'); return false;" class="control" id="type_RequestVerbType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_RequestVerbType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">RequestVerbType</span>" <span class="scTag">abstract</span>="<span class="scContent">true</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_Expression" title="Jump to &quot;Expression&quot; element declaration.">Expression</a>
</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_RequestVerbType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ResponseVerbType">ResponseVerbType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span> &lt; <strong>ResponseVerbType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>
<ul>
<li>
<span class="type">
<a href="#type_AcknowledgeType" title="Jump to &quot;AcknowledgeType&quot; type definition.">AcknowledgeType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_ConfirmType" title="Jump to &quot;ConfirmType&quot; type definition.">ConfirmType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_RespondType" title="Jump to &quot;RespondType&quot; type definition.">RespondType</a>
</span> (by extension)</li>
<li>
<span class="type">
<a href="#type_ShowType" title="Jump to &quot;ShowType&quot; type definition.">ShowType</a>
</span> (by extension)<ul>
<li>
<span class="type">
<a href="#type_ListType" title="Jump to &quot;ListType&quot; type definition.">ListType</a>
</span> (by extension)</li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ResponseVerbType</td>
</tr>
<tr>
<th>Abstract</th>
<td>yes</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ResponseVerbType_xibox'); return false;" class="control" id="type_ResponseVerbType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ResponseVerbType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="newFields">&lt;<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; ... &lt;/<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="newFields">&lt;<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; ... &lt;/<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>&gt; <span class="occurs">[0..*]</span> <a class="documentation" title="View Documentation" href="javascript:void(0)" onclick="docArray = new Array('More information at: http://www.openapplications.org/platform/1.'); viewDocumentation('Element', 'ResponseCriteria', docArray);">?</a>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ResponseVerbType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ResponseVerbType_scbox'); return false;" class="control" id="type_ResponseVerbType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ResponseVerbType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ResponseVerbType</span>" <span class="scTag">abstract</span>="<span class="scContent">true</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_VerbType" title="Jump to &quot;VerbType&quot; type definition.">VerbType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_OriginalApplicationArea" title="Jump to &quot;OriginalApplicationArea&quot; element declaration.">OriginalApplicationArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_ResponseCriteria" title="Jump to &quot;ResponseCriteria&quot; element declaration.">ResponseCriteria</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ResponseVerbType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_ChangeStatusType">ChangeStatusType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>
<span class="type">
<a href="#type_StatusBasisType" title="Jump to &quot;StatusBasisType&quot; type definition.">StatusBasisType</a>
</span> &lt; <strong>ChangeStatusType</strong> (by extension)</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>ChangeStatusType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_ChangeStatusType_xibox'); return false;" class="control" id="type_ChangeStatusType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_ChangeStatusType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="javascript:void(0)" title="&quot;Code&quot; element declaration could not be found." onclick="alert('&quot;Code&quot; element declaration could not be found.');">Code</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Code&quot; element declaration could not be found." onclick="alert('&quot;Code&quot; element declaration could not be found.');">Code</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="javascript:void(0)" title="&quot;EffectiveDateTime&quot; element declaration could not be found." onclick="alert('&quot;EffectiveDateTime&quot; element declaration could not be found.');">EffectiveDateTime</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;EffectiveDateTime&quot; element declaration could not be found." onclick="alert('&quot;EffectiveDateTime&quot; element declaration could not be found.');">EffectiveDateTime</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em" class="inherited">&lt;<a href="javascript:void(0)" title="&quot;Reason&quot; element declaration could not be found." onclick="alert('&quot;Reason&quot; element declaration could not be found.');">Reason</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Reason&quot; element declaration could not be found." onclick="alert('&quot;Reason&quot; element declaration could not be found.');">Reason</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em" class="newFields">&lt;<a href="#element_StateChange" title="Jump to &quot;StateChange&quot; element declaration.">StateChange</a>&gt; ... &lt;/<a href="#element_StateChange" title="Jump to &quot;StateChange&quot; element declaration.">StateChange</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em" class="newFields">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ChangeStatusType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_ChangeStatusType_scbox'); return false;" class="control" id="type_ChangeStatusType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_ChangeStatusType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">ChangeStatusType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:complexContent</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:extension</span> <span class="scTag">base</span>="<span class="scContent">
<span class="type">
<a href="#type_StatusBasisType" title="Jump to &quot;StatusBasisType&quot; type definition.">StatusBasisType</a>
</span>
</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#element_StateChange" title="Jump to &quot;StateChange&quot; element declaration.">StateChange</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:extension</span>&gt;</div>&lt;/<span class="scTag">xsd:complexContent</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_ChangeStatusType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ChangeStatus">ChangeStatus</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ChangeStatus</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_ChangeStatusType" title="Jump to &quot;ChangeStatusType&quot; type definition.">ChangeStatusType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ChangeStatus_xibox'); return false;" class="control" id="element_ChangeStatus_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ChangeStatus_xibox">
<div style="margin-left: 0em">&lt;ChangeStatus&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Code&quot; element declaration could not be found." onclick="alert('&quot;Code&quot; element declaration could not be found.');">Code</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Code&quot; element declaration could not be found." onclick="alert('&quot;Code&quot; element declaration could not be found.');">Code</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;EffectiveDateTime&quot; element declaration could not be found." onclick="alert('&quot;EffectiveDateTime&quot; element declaration could not be found.');">EffectiveDateTime</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;EffectiveDateTime&quot; element declaration could not be found." onclick="alert('&quot;EffectiveDateTime&quot; element declaration could not be found.');">EffectiveDateTime</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Reason&quot; element declaration could not be found." onclick="alert('&quot;Reason&quot; element declaration could not be found.');">Reason</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Reason&quot; element declaration could not be found." onclick="alert('&quot;Reason&quot; element declaration could not be found.');">Reason</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="#element_StateChange" title="Jump to &quot;StateChange&quot; element declaration.">StateChange</a>&gt; ... &lt;/<a href="#element_StateChange" title="Jump to &quot;StateChange&quot; element declaration.">StateChange</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/ChangeStatus&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ChangeStatus_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ChangeStatus_scbox'); return false;" class="control" id="element_ChangeStatus_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ChangeStatus_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ChangeStatus</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_ChangeStatusType" title="Jump to &quot;ChangeStatusType&quot; type definition.">ChangeStatusType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ChangeStatus_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_StatusBasisType">StatusBasisType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>
<ul>
<li>
<span class="type">
<a href="#type_ChangeStatusType" title="Jump to &quot;ChangeStatusType&quot; type definition.">ChangeStatusType</a>
</span> (by extension)</li>
</ul>
</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>StatusBasisType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_StatusBasisType_xibox'); return false;" class="control" id="type_StatusBasisType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_StatusBasisType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Code&quot; element declaration could not be found." onclick="alert('&quot;Code&quot; element declaration could not be found.');">Code</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Code&quot; element declaration could not be found." onclick="alert('&quot;Code&quot; element declaration could not be found.');">Code</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;EffectiveDateTime&quot; element declaration could not be found." onclick="alert('&quot;EffectiveDateTime&quot; element declaration could not be found.');">EffectiveDateTime</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;EffectiveDateTime&quot; element declaration could not be found." onclick="alert('&quot;EffectiveDateTime&quot; element declaration could not be found.');">EffectiveDateTime</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Reason&quot; element declaration could not be found." onclick="alert('&quot;Reason&quot; element declaration could not be found.');">Reason</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Reason&quot; element declaration could not be found." onclick="alert('&quot;Reason&quot; element declaration could not be found.');">Reason</a>&gt; <span class="occurs">[0..*]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_StatusBasisType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_StatusBasisType_scbox'); return false;" class="control" id="type_StatusBasisType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_StatusBasisType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">StatusBasisType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;Code&quot; element declaration could not be found." onclick="alert('&quot;Code&quot; element declaration could not be found.');">Code</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;EffectiveDateTime&quot; element declaration could not be found." onclick="alert('&quot;EffectiveDateTime&quot; element declaration could not be found.');">EffectiveDateTime</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;Reason&quot; element declaration could not be found." onclick="alert('&quot;Reason&quot; element declaration could not be found.');">Reason</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_StatusBasisType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Complex Type: <a class="name" name="type_StateChangeType">StateChangeType</a>
</h3>
<table class="hierarchy">
<tr>
<th>Super-types:</th>
<td>None</td>
</tr>
<tr>
<th>Sub-types:</th>
<td>None</td>
</tr>
</table>
<table class="properties">
<tr>
<th>Name</th>
<td>StateChangeType</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('type_StateChangeType_xibox'); return false;" class="control" id="type_StateChangeType_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="type_StateChangeType_xibox">
<div style="margin-left: 0em">&lt;...&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;FromStateCode&quot; element declaration could not be found." onclick="alert('&quot;FromStateCode&quot; element declaration could not be found.');">FromStateCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;FromStateCode&quot; element declaration could not be found." onclick="alert('&quot;FromStateCode&quot; element declaration could not be found.');">FromStateCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ToStateCode&quot; element declaration could not be found." onclick="alert('&quot;ToStateCode&quot; element declaration could not be found.');">ToStateCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ToStateCode&quot; element declaration could not be found." onclick="alert('&quot;ToStateCode&quot; element declaration could not be found.');">ToStateCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ChangeDateTime&quot; element declaration could not be found." onclick="alert('&quot;ChangeDateTime&quot; element declaration could not be found.');">ChangeDateTime</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ChangeDateTime&quot; element declaration could not be found." onclick="alert('&quot;ChangeDateTime&quot; element declaration could not be found.');">ChangeDateTime</a>&gt; <span class="occurs">[0..1]</span>
</div>
<span style="margin-left: 1.5em" class="group">Start Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a> <span class="occurs">[0..1]</span>
</span>
<br />
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; <span class="occurs">[0..*]</span>
</div>
<span style="margin-left: 1.5em" class="group">End Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a>
</span>
<br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/...&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_StateChangeType_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('type_StateChangeType_scbox'); return false;" class="control" id="type_StateChangeType_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="type_StateChangeType_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:complexType</span> <span class="scTag">name</span>="<span class="scContent">StateChangeType</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;FromStateCode&quot; element declaration could not be found." onclick="alert('&quot;FromStateCode&quot; element declaration could not be found.');">FromStateCode</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;ToStateCode&quot; element declaration could not be found." onclick="alert('&quot;ToStateCode&quot; element declaration could not be found.');">ToStateCode</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;ChangeDateTime&quot; element declaration could not be found." onclick="alert('&quot;ChangeDateTime&quot; element declaration could not be found.');">ChangeDateTime</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:group</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:complexType</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('type_StateChangeType_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_StateChange">StateChange</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>StateChange</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_StateChangeType" title="Jump to &quot;StateChangeType&quot; type definition.">StateChangeType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_StateChange_xibox'); return false;" class="control" id="element_StateChange_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_StateChange_xibox">
<div style="margin-left: 0em">&lt;StateChange&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;FromStateCode&quot; element declaration could not be found." onclick="alert('&quot;FromStateCode&quot; element declaration could not be found.');">FromStateCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;FromStateCode&quot; element declaration could not be found." onclick="alert('&quot;FromStateCode&quot; element declaration could not be found.');">FromStateCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ToStateCode&quot; element declaration could not be found." onclick="alert('&quot;ToStateCode&quot; element declaration could not be found.');">ToStateCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ToStateCode&quot; element declaration could not be found." onclick="alert('&quot;ToStateCode&quot; element declaration could not be found.');">ToStateCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ChangeDateTime&quot; element declaration could not be found." onclick="alert('&quot;ChangeDateTime&quot; element declaration could not be found.');">ChangeDateTime</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ChangeDateTime&quot; element declaration could not be found." onclick="alert('&quot;ChangeDateTime&quot; element declaration could not be found.');">ChangeDateTime</a>&gt; <span class="occurs">[0..1]</span>
</div>
<span style="margin-left: 1.5em" class="group">Start Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a> <span class="occurs">[0..1]</span>
</span>
<br />
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; <span class="occurs">[0..*]</span>
</div>
<span style="margin-left: 1.5em" class="group">End Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a>
</span>
<br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/StateChange&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_StateChange_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_StateChange_scbox'); return false;" class="control" id="element_StateChange_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_StateChange_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">StateChange</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_StateChangeType" title="Jump to &quot;StateChangeType&quot; type definition.">StateChangeType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_StateChange_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Model Group: <a class="name" name="group_FreeFormTextGroup">FreeFormTextGroup</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>FreeFormTextGroup</td>
</tr>
<tr>
<th>Documentation</th>
<td>Common Free Form Text elements that occur together.<br /> More information at: <a href="http://www.openapplications.org/platform/1" title="http://www.openapplications.org/platform/1">http://www.openapplications.org/platform/1</a>.</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('group_FreeFormTextGroup_xibox'); return false;" class="control" id="group_FreeFormTextGroup_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="group_FreeFormTextGroup_xibox">
<div style="margin-left: 0em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 0em">&lt;<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; <span class="occurs">[0..*]</span>
</div>
</div>
<script type="text/javascript">
<!--
setState('group_FreeFormTextGroup_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('group_FreeFormTextGroup_scbox'); return false;" class="control" id="group_FreeFormTextGroup_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="group_FreeFormTextGroup_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:group</span> <span class="scTag">name</span>="<span class="scContent">FreeFormTextGroup</span>"&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:sequence</span>&gt;<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>
<div style="margin-left: 1.5em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">ref</span>="<span class="scContent">
<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>
</span>" <span class="scTag">minOccurs</span>="<span class="scContent">0</span>" <span class="scTag">maxOccurs</span>="<span class="scContent">unbounded</span>"/&gt;</div>&lt;/<span class="scTag">xsd:sequence</span>&gt;</div>&lt;/<span class="scTag">xsd:group</span>&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('group_FreeFormTextGroup_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<h3>Element: <a class="name" name="element_ProcessMessage">ProcessMessage</a>
</h3>
<table class="properties">
<tr>
<th>Name</th>
<td>ProcessMessage</td>
</tr>
<tr>
<th>Type</th>
<td>
<span class="type">
<a href="#type_MessageType" title="Jump to &quot;MessageType&quot; type definition.">MessageType</a>
</span>
</td>
</tr>
<tr>
<th>Nillable</th>
<td>no</td>
</tr>
<tr>
<th>Abstract</th>
<td>no</td>
</tr>
</table>
<div class="sample box">
<div>
<input style="display: none" onclick="switchState('element_ProcessMessage_xibox'); return false;" class="control" id="element_ProcessMessage_xibox_button" type="button" /> <span class="caption">XML Instance Representation</span>
</div>
<div class="contents" id="element_ProcessMessage_xibox">
<div style="margin-left: 0em">&lt;ProcessMessage&gt; <br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ID&quot; element declaration could not be found." onclick="alert('&quot;ID&quot; element declaration could not be found.');">ID</a>&gt; <span class="occurs">[0..1]</span>
</div>
<span style="margin-left: 1.5em" class="group">Start Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a> <span class="occurs">[0..1]</span>
</span>
<br />
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Description&quot; element declaration could not be found." onclick="alert('&quot;Description&quot; element declaration could not be found.');">Description</a>&gt; <span class="occurs">[0..*]</span>
</div>
<div style="margin-left: 3em">&lt;<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Note&quot; element declaration could not be found." onclick="alert('&quot;Note&quot; element declaration could not be found.');">Note</a>&gt; <span class="occurs">[0..*]</span>
</div>
<span style="margin-left: 1.5em" class="group">End Group: <a href="#group_FreeFormTextGroup" title="Jump to &quot;FreeFormTextGroup&quot; group definition.">FreeFormTextGroup</a>
</span>
<br />
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;Type&quot; element declaration could not be found." onclick="alert('&quot;Type&quot; element declaration could not be found.');">Type</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;ReasonCode&quot; element declaration could not be found." onclick="alert('&quot;ReasonCode&quot; element declaration could not be found.');">ReasonCode</a>&gt; <span class="occurs">[0..1]</span>
</div>
<div style="margin-left: 1.5em">&lt;<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; ... &lt;/<a href="javascript:void(0)" title="&quot;UserArea&quot; element declaration could not be found." onclick="alert('&quot;UserArea&quot; element declaration could not be found.');">UserArea</a>&gt; <span class="occurs">[0..1]</span>
</div>&lt;/ProcessMessage&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ProcessMessage_xibox', true);
// -->
</script>
</div>
<div class="schemaComponent box">
<div>
<input style="display: none" onclick="switchState('element_ProcessMessage_scbox'); return false;" class="control" id="element_ProcessMessage_scbox_button" type="button" /> <span class="caption">Schema Component Representation</span>
</div>
<div class="contents" id="element_ProcessMessage_scbox">
<div style="margin-left: 0em">&lt;<span class="scTag">xsd:element</span> <span class="scTag">name</span>="<span class="scContent">ProcessMessage</span>" <span class="scTag">type</span>="<span class="scContent">
<span class="type">
<a href="#type_MessageType" title="Jump to &quot;MessageType&quot; type definition.">MessageType</a>
</span>
</span>"/&gt;</div>
</div>
<script type="text/javascript">
<!--
setState('element_ProcessMessage_scbox', false);
// -->
</script>
</div>
<div style="text-align: right; clear: both;">
<a href="#top">top</a>
</div>
<hr />
<p class="footer">Generated by <a href="http://titanium.dstc.edu.au/xml/xs3p">xs3p</a>. Last modified: <script type="text/javascript">
<!--
document.write(document.lastModified);
// -->
</script>
</p>
</body>
</html>
