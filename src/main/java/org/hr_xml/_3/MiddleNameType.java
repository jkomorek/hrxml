//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.openapplications.oagis._9.TextType;


/**
 * 
 * This is a second "given name" or sometimes depending on cultural context,
 * representative of family relationships. 
 * 
 * A middle name can have a prefix. For example, in Saudi names the word "Bin"
 * means "son of" and would be a common prefix to a middle name 
 * usually representing the first name of the person's father.  
 * 
 * Some implementers may choose not to represent a prefix separately from a middle name. However,
 * it may be desirable to do so for a number of reasons: 
 *  1. name sorting.  For example, to support sorting on first letter of prefix and then by first letter of the middle name.
 *  2. formatting. For example, depending on the cultural context in which the name is presented, the type of 
 * delimiter (e.g., a space or a hyphen) between the prefix and the family name (or whether a delimiter appears at) all 
 * may depend on the "alphabet" and/or cultural context in which the name is presented.
 * 
 * <p>Java class for MiddleNameType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MiddleNameType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.openapplications.org/oagis/9>TextType">
 *       &lt;attribute name="prefix" type="{http://www.openapplications.org/oagis/9}StringType" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MiddleNameType")
public class MiddleNameType
    extends TextType
{

    @XmlAttribute(name = "prefix")
    protected String prefix;

    /**
     * Gets the value of the prefix property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrefix() {
        return prefix;
    }

    /**
     * Sets the value of the prefix property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrefix(String value) {
        this.prefix = value;
    }

}
