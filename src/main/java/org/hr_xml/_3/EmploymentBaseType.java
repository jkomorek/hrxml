//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ccts:CategoryCode xmlns:ccts="urn:un:unece:uncefact:documentation:1.1" xmlns="http://www.hr-xml.org/3" xmlns:oa="http://www.openapplications.org/oagis/9" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;ABIE&lt;/ccts:CategoryCode&gt;
 * </pre>
 * 
 * 				
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ccts:DictionaryEntryName xmlns:ccts="urn:un:unece:uncefact:documentation:1.1" xmlns="http://www.hr-xml.org/3" xmlns:oa="http://www.openapplications.org/oagis/9" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;_ Employment. Details&lt;/ccts:DictionaryEntryName&gt;
 * </pre>
 * 
 * 				
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ccts:DefinitionText xmlns:ccts="urn:un:unece:uncefact:documentation:1.1" xmlns="http://www.hr-xml.org/3" xmlns:oa="http://www.openapplications.org/oagis/9" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;Contains the set of data about a person's
 * 				employment with an employer that is relevant in the provisioning of 
 * 				outsourced benefits and payroll systems.
 *  
 * Employment is a contract of hire, express or implied, between a person (an employee) 
 * and another party (an employer), where that party has the power or right to control and 
 * direct the employee in the material details of how the work is to be performed.
 * 
 * Employment is a type of relationship between two parties. It is important to distiquish 
 * the attributes of the parties (employee / employer) from the attributes of the party 
 * relationship.		
 * 
 * Contains information relating to the relationship, such as expected hire date, hire date, 
 * periods of leave, termination date, etc.	
 * 				&lt;/ccts:DefinitionText&gt;
 * </pre>
 * 
 * 			
 * 
 * <p>Java class for EmploymentBaseType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="EmploymentBaseType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.hr-xml.org/3}EmployedIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}ProposedHire" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}EmploymentLifecycle" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.hr-xml.org/3}UserArea" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{http://www.hr-xml.org/3}EffectiveDateAttributeGroup"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EmploymentBaseType", propOrder = {
    "employedIndicator",
    "proposedHire",
    "employmentLifecycle",
    "userArea"
})
@XmlSeeAlso({
    MasterEmploymentType.class
})
public class EmploymentBaseType {

    @XmlElement(name = "EmployedIndicator")
    protected EffectiveDatedIndicatorType employedIndicator;
    @XmlElement(name = "ProposedHire")
    protected ProposedHireType proposedHire;
    @XmlElement(name = "EmploymentLifecycle")
    protected List<EmploymentLifecycleType> employmentLifecycle;
    @XmlElement(name = "UserArea")
    protected UserAreaType userArea;
    @XmlAttribute(name = "validFrom")
    protected List<String> validFrom;
    @XmlAttribute(name = "validTo")
    protected List<String> validTo;

    /**
     * Gets the value of the employedIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link EffectiveDatedIndicatorType }
     *     
     */
    public EffectiveDatedIndicatorType getEmployedIndicator() {
        return employedIndicator;
    }

    /**
     * Sets the value of the employedIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link EffectiveDatedIndicatorType }
     *     
     */
    public void setEmployedIndicator(EffectiveDatedIndicatorType value) {
        this.employedIndicator = value;
    }

    /**
     * Gets the value of the proposedHire property.
     * 
     * @return
     *     possible object is
     *     {@link ProposedHireType }
     *     
     */
    public ProposedHireType getProposedHire() {
        return proposedHire;
    }

    /**
     * Sets the value of the proposedHire property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProposedHireType }
     *     
     */
    public void setProposedHire(ProposedHireType value) {
        this.proposedHire = value;
    }

    /**
     * Contains details on a period of employment with an employer. This would generally repeat if an employee was rehired after a prior termination, became an employee of a new related employer as a result of acquistion or re-organization, etc.Gets the value of the employmentLifecycle property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the employmentLifecycle property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEmploymentLifecycle().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EmploymentLifecycleType }
     * 
     * 
     */
    public List<EmploymentLifecycleType> getEmploymentLifecycle() {
        if (employmentLifecycle == null) {
            employmentLifecycle = new ArrayList<EmploymentLifecycleType>();
        }
        return this.employmentLifecycle;
    }

    /**
     * Gets the value of the userArea property.
     * 
     * @return
     *     possible object is
     *     {@link UserAreaType }
     *     
     */
    public UserAreaType getUserArea() {
        return userArea;
    }

    /**
     * Sets the value of the userArea property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserAreaType }
     *     
     */
    public void setUserArea(UserAreaType value) {
        this.userArea = value;
    }

    /**
     * Gets the value of the validFrom property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the validFrom property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getValidFrom().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getValidFrom() {
        if (validFrom == null) {
            validFrom = new ArrayList<String>();
        }
        return this.validFrom;
    }

    /**
     * Gets the value of the validTo property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the validTo property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getValidTo().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getValidTo() {
        if (validTo == null) {
            validTo = new ArrayList<String>();
        }
        return this.validTo;
    }

}
