//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.06 at 10:26:45 PM EST 
//


package org.hr_xml._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TimeOffAllowanceTypeCodeEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TimeOffAllowanceTypeCodeEnumType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="PaidHoliday"/>
 *     &lt;enumeration value="UnpaidHoliday"/>
 *     &lt;enumeration value="PaidVacation"/>
 *     &lt;enumeration value="PaidLeave"/>
 *     &lt;enumeration value="UnpaidLeave"/>
 *     &lt;enumeration value="PersonalLeave"/>
 *     &lt;enumeration value="SickLeave"/>
 *     &lt;enumeration value="Disability"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TimeOffAllowanceTypeCodeEnumType")
@XmlEnum
public enum TimeOffAllowanceTypeCodeEnumType {

    @XmlEnumValue("PaidHoliday")
    PAID_HOLIDAY("PaidHoliday"),
    @XmlEnumValue("UnpaidHoliday")
    UNPAID_HOLIDAY("UnpaidHoliday"),
    @XmlEnumValue("PaidVacation")
    PAID_VACATION("PaidVacation"),
    @XmlEnumValue("PaidLeave")
    PAID_LEAVE("PaidLeave"),
    @XmlEnumValue("UnpaidLeave")
    UNPAID_LEAVE("UnpaidLeave"),
    @XmlEnumValue("PersonalLeave")
    PERSONAL_LEAVE("PersonalLeave"),
    @XmlEnumValue("SickLeave")
    SICK_LEAVE("SickLeave"),
    @XmlEnumValue("Disability")
    DISABILITY("Disability");
    private final String value;

    TimeOffAllowanceTypeCodeEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TimeOffAllowanceTypeCodeEnumType fromValue(String v) {
        for (TimeOffAllowanceTypeCodeEnumType c: TimeOffAllowanceTypeCodeEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
